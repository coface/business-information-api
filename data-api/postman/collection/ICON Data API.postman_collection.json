{
	"info": {
		"_postman_id": "b1afab1e-3e94-4e10-9a6a-47435c67f39e",
		"name": "ICON Data API",
		"description": "Contact Support:\n Name: COFACE ICON\n Email: amandine.tridou-ext@coface.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "authentification",
			"item": [
				{
					"name": "authentication",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(request.name, function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.environment.set(\"idToken\", JSON.parse(responseBody).idToken);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{dataAPIApiKey}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "x-api-key",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"password\": \"{{awsPassword}}\",\r\n    \"grantType\": \"password\",\r\n    \"username\": \"{{awsLogin}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{authentificationAPIBaseUrl}}/token",
							"host": [
								"{{authentificationAPIBaseUrl}}"
							],
							"path": [
								"token"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "error",
			"item": [
				{
					"name": "assessments",
					"item": [
						{
							"name": "assessments - No filter",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(request.name, function () {\r",
											"    checkResponse(pm, 400, \"countryCode\", true);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "{{idToken}}",
										"type": "text"
									},
									{
										"key": "x-api-key",
										"value": "{{dataAPIApiKey}}",
										"type": "text"
									},
									{
										"key": "Accept-Language",
										"value": "PT",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{dataAPIBaseUrl}}/assessments",
									"host": [
										"{{dataAPIBaseUrl}}"
									],
									"path": [
										"assessments"
									],
									"query": [
										{
											"key": "countryCode",
											"value": "P8899",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "assessments - Wrong countryCode",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(request.name, function () {\r",
											"    checkResponse(pm, 400, \"countryCode\", false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "{{idToken}}",
										"type": "text"
									},
									{
										"key": "x-api-key",
										"value": "{{dataAPIApiKey}}",
										"type": "text"
									},
									{
										"key": "Accept-Language",
										"value": "PT",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{dataAPIBaseUrl}}/assessments?countryCode=P8899",
									"host": [
										"{{dataAPIBaseUrl}}"
									],
									"path": [
										"assessments"
									],
									"query": [
										{
											"key": "countryCode",
											"value": "P8899"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "companies",
					"item": [
						{
							"name": "identifications",
							"item": [
								{
									"name": "GET",
									"item": [
										{
											"name": "companies/identifications - Range text",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(request.name, function () {\r",
															"    checkResponse(pm, 400, \"range\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "GET",
												"header": [
													{
														"key": "authorization",
														"value": "{{idToken}}",
														"type": "text"
													},
													{
														"key": "x-api-key",
														"value": "{{dataAPIApiKey}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{dataAPIBaseUrl}}/companies/identifications?range=sdqsd",
													"host": [
														"{{dataAPIBaseUrl}}"
													],
													"path": [
														"companies",
														"identifications"
													],
													"query": [
														{
															"key": "range",
															"value": "sdqsd",
															"description": "Pagination interval\n\nEx: Resources from an index to another included one (from 10 to 25 => ?range = 10-25)."
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "companies/identifications - Negative Offset",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(request.name, function () {\r",
															"    checkResponse(pm, 400, \"range\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "GET",
												"header": [
													{
														"key": "authorization",
														"value": "{{idToken}}",
														"type": "text"
													},
													{
														"key": "x-api-key",
														"value": "{{dataAPIApiKey}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{dataAPIBaseUrl}}/companies/identifications?range=-1-6",
													"host": [
														"{{dataAPIBaseUrl}}"
													],
													"path": [
														"companies",
														"identifications"
													],
													"query": [
														{
															"key": "range",
															"value": "-1-6",
															"description": "Pagination interval\n\nEx: Resources from an index to another included one (from 10 to 25 => ?range = 10-25)."
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "companies/identifications - Negative limit",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(request.name, function () {\r",
															"    checkResponse(pm, 400, \"range\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "GET",
												"header": [
													{
														"key": "authorization",
														"value": "{{idToken}}",
														"type": "text"
													},
													{
														"key": "x-api-key",
														"value": "{{dataAPIApiKey}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{dataAPIBaseUrl}}/companies/identifications?range=0--6",
													"host": [
														"{{dataAPIBaseUrl}}"
													],
													"path": [
														"companies",
														"identifications"
													],
													"query": [
														{
															"key": "range",
															"value": "0--6",
															"description": "Pagination interval\n\nEx: Resources from an index to another included one (from 10 to 25 => ?range = 10-25)."
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "companies/identifications - Limit > Maxpage",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(request.name, function () {\r",
															"   checkPagination(pm, \"identifications\", 20, null, pm.request.url.query.get(\"range\"));\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "GET",
												"header": [
													{
														"key": "authorization",
														"value": "{{idToken}}",
														"type": "text"
													},
													{
														"key": "x-api-key",
														"value": "{{dataAPIApiKey}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{dataAPIBaseUrl}}/companies/identifications?range=10-50",
													"host": [
														"{{dataAPIBaseUrl}}"
													],
													"path": [
														"companies",
														"identifications"
													],
													"query": [
														{
															"key": "range",
															"value": "10-50",
															"description": "Pagination interval\n\nEx: Resources from an index to another included one (from 10 to 25 => ?range = 10-25)."
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "POST",
									"item": [
										{
											"name": "companies/identifications - No body",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(request.name, function () {\r",
															"    checkResponse(pm, 400, \"body\", true);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "authorization",
														"value": "{{idToken}}",
														"type": "text"
													},
													{
														"key": "x-api-key",
														"value": "{{dataAPIApiKey}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{dataAPIBaseUrl}}/companies/identifications",
													"host": [
														"{{dataAPIBaseUrl}}"
													],
													"path": [
														"companies",
														"identifications"
													]
												}
											},
											"response": []
										},
										{
											"name": "companies/identifications - Empty body",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(request.name, function () { // ICON-5229\r",
															"    checkResponse(pm, 400, \"body\", false, \"One of the following identification parameters has to be provided: address.countryCode and at least one externalId or (name, address.postalCode, address.city)\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "authorization",
														"value": "{{idToken}}",
														"type": "text"
													},
													{
														"key": "x-api-key",
														"value": "{{dataAPIApiKey}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{dataAPIBaseUrl}}/companies/identifications",
													"host": [
														"{{dataAPIBaseUrl}}"
													],
													"path": [
														"companies",
														"identifications"
													]
												}
											},
											"response": []
										},
										{
											"name": "companies/identifications - Empty externalId",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(request.name, function () {\r",
															"  if (mustControlResult(pm, \"ICON-5229\")) {\r",
															"        checkResponse(pm, 400, \"body\", false, \"One of the following identification parameters has to be provided: address.countryCode and at least one externalId or (name, address.postalCode, address.city)\");\r",
															"  }\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "authorization",
														"value": "{{idToken}}",
														"type": "text"
													},
													{
														"key": "x-api-key",
														"value": "{{dataAPIApiKey}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"externalIds\": [\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{dataAPIBaseUrl}}/companies/identifications",
													"host": [
														"{{dataAPIBaseUrl}}"
													],
													"path": [
														"companies",
														"identifications"
													]
												}
											},
											"response": []
										},
										{
											"name": "companies/identifications - ExternalId Missing slug",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(request.name, function () {\r",
															"   if (mustControlResult(pm, \"ICON-5229\")) {\r",
															"        checkResponse(pm, 400, \"body\", false, \"One of the following identification parameters has to be provided: address.countryCode and at least one externalId or (name, address.postalCode, address.city)\");\r",
															"   }\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "authorization",
														"value": "{{idToken}}",
														"type": "text"
													},
													{
														"key": "x-api-key",
														"value": "{{dataAPIApiKey}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"externalIds\": [\n    {\n      \"id\": \"123456\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{dataAPIBaseUrl}}/companies/identifications",
													"host": [
														"{{dataAPIBaseUrl}}"
													],
													"path": [
														"companies",
														"identifications"
													]
												}
											},
											"response": []
										},
										{
											"name": "companies/identifications - ExternalId",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(request.name, function () {\r",
															"   if (mustControlResult(pm, \"ICON-5229\")) {\r",
															"        checkResponse(pm, 400, \"body\", false, \"One of the following identification parameters has to be provided: address.countryCode and at least one externalId or (name, address.postalCode, address.city)\");\r",
															"   }\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "authorization",
														"value": "{{idToken}}",
														"type": "text"
													},
													{
														"key": "x-api-key",
														"value": "{{dataAPIApiKey}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"externalIds\": [\n    {\n      \"id\": \"123456\",\n      \"repositorySlug\": \"easy\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{dataAPIBaseUrl}}/companies/identifications",
													"host": [
														"{{dataAPIBaseUrl}}"
													],
													"path": [
														"companies",
														"identifications"
													]
												}
											},
											"response": []
										},
										{
											"name": "companies/identifications - Wrong country",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(request.name, function () {\r",
															"    if (mustControlResult(pm, \"ICON-5229\")) {\r",
															"        checkResponse(pm, 400, \"address.countryCode\", false);\r",
															"    }\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "authorization",
														"value": "{{idToken}}",
														"type": "text"
													},
													{
														"key": "x-api-key",
														"value": "{{dataAPIApiKey}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Coface SA\",\n    \"address\": {\n        \"address1\": \"2 rue de Siam\",\n        \"address2\": \"Bâtiment B, Escalier C\",\n        \"postalCode\": \"ea vo\",\n        \"city\": \"BREST\",\n        \"state\": \"mollit id\",\n        \"countryCode\": \"F8\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{dataAPIBaseUrl}}/companies/identifications",
													"host": [
														"{{dataAPIBaseUrl}}"
													],
													"path": [
														"companies",
														"identifications"
													]
												}
											},
											"response": []
										},
										{
											"name": "companies/identifications - Only countryCode",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(request.name, function () {\r",
															"   if (mustControlResult(pm, \"ICON-5229\")) {\r",
															"        checkResponse(pm, 400, \"body\", false, \"One of the following identification parameters has to be provided: address.countryCode and at least one externalId or (name, address.postalCode, address.city)\");\r",
															"   }\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "authorization",
														"value": "{{idToken}}",
														"type": "text"
													},
													{
														"key": "x-api-key",
														"value": "{{dataAPIApiKey}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"address\": {\n        \"countryCode\": \"F8\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{dataAPIBaseUrl}}/companies/identifications",
													"host": [
														"{{dataAPIBaseUrl}}"
													],
													"path": [
														"companies",
														"identifications"
													]
												}
											},
											"response": []
										},
										{
											"name": "companies/identifications - Only countryCode + name",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(request.name, function () {\r",
															"   if (mustControlResult(pm, \"ICON-5229\")) {\r",
															"        checkResponse(pm, 400, \"body\", false, \"One of the following identification parameters has to be provided: address.countryCode and at least one externalId or (name, address.postalCode, address.city)\");\r",
															"   }\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "authorization",
														"value": "{{idToken}}",
														"type": "text"
													},
													{
														"key": "x-api-key",
														"value": "{{dataAPIApiKey}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\":\"e\",\n    \"address\": {\n        \"countryCode\": \"FR\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{dataAPIBaseUrl}}/companies/identifications",
													"host": [
														"{{dataAPIBaseUrl}}"
													],
													"path": [
														"companies",
														"identifications"
													]
												}
											},
											"response": []
										},
										{
											"name": "companies/identifications - Only countryCode + name + postalCode",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(request.name, function () {\r",
															"   if (mustControlResult(pm, \"ICON-5229\")) {\r",
															"        checkResponse(pm, 400, \"body\", false, \"One of the following identification parameters has to be provided: address.countryCode and at least one externalId or (name, address.postalCode, address.city)\");\r",
															"   }\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "authorization",
														"value": "{{idToken}}",
														"type": "text"
													},
													{
														"key": "x-api-key",
														"value": "{{dataAPIApiKey}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\":\"e\",\n    \"address\": {\n        \"postalCode\": \"ea vo\",\n        \"countryCode\": \"FR\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{dataAPIBaseUrl}}/companies/identifications",
													"host": [
														"{{dataAPIBaseUrl}}"
													],
													"path": [
														"companies",
														"identifications"
													]
												}
											},
											"response": []
										},
										{
											"name": "companies/identifications - PL Only countryCode + name + postalCode + city",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(request.name, function () {\r",
															"    // ICON-5263\r",
															"    checkResponse(pm, 200);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "authorization",
														"value": "{{idToken}}",
														"type": "text"
													},
													{
														"key": "x-api-key",
														"value": "{{dataAPIApiKey}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"p\",\n    \"address\": {\n        \"address1\": \"ul. Mołdawska 6/5\",\n        \"postalCode\": \"02-127\",\n        \"city\": \"Warszawa\",\n        \"countryCode\": \"PL\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{dataAPIBaseUrl}}/companies/identifications",
													"host": [
														"{{dataAPIBaseUrl}}"
													],
													"path": [
														"companies",
														"identifications"
													]
												}
											},
											"response": []
										},
										{
											"name": "companies/identifications - Wrong minimal companyNameSize",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(request.name, function () {\r",
															"    checkParamSize(pm, 'name', 1, 255);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "authorization",
														"value": "{{idToken}}",
														"type": "text"
													},
													{
														"key": "x-api-key",
														"value": "{{dataAPIApiKey}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"\",\n    \"address\": {\n        \"address1\": \"ul. Mołdawska 6/5\",\n        \"postalCode\": \"02-127d\",\n        \"city\": \"Warszawa\",\n        \"countryCode\": \"PL\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{dataAPIBaseUrl}}/companies/identifications",
													"host": [
														"{{dataAPIBaseUrl}}"
													],
													"path": [
														"companies",
														"identifications"
													]
												}
											},
											"response": []
										},
										{
											"name": "companies/identifications - Wrong maximal companyNameSize Copy",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(request.name, function () {\r",
															"    checkParamSize(pm, 'name', 1, 255);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "authorization",
														"value": "{{idToken}}",
														"type": "text"
													},
													{
														"key": "x-api-key",
														"value": "{{dataAPIApiKey}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"dfzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffsffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdfzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffsffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdfzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffsffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdfzffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffsffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n    \"address\": {\n        \"address1\": \"ul. Mołdawska 6/5\",\n        \"postalCode\": \"02-127d\",\n        \"city\": \"Warszawa\",\n        \"countryCode\": \"PL\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{dataAPIBaseUrl}}/companies/identifications",
													"host": [
														"{{dataAPIBaseUrl}}"
													],
													"path": [
														"companies",
														"identifications"
													]
												}
											},
											"response": []
										},
										{
											"name": "companies/identifications - Wrong postalCode",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(request.name, function () {\r",
															"    checkParamSize(pm, 'address/postalCode ', 1, 10);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "authorization",
														"value": "{{idToken}}",
														"type": "text"
													},
													{
														"key": "x-api-key",
														"value": "{{dataAPIApiKey}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"p\",\n    \"address\": {\n        \"address1\": \"ul. Mołdawska 6/5\",\n        \"postalCode\": \"02-127dssdsqd\",\n        \"city\": \"Warszawa\",\n        \"countryCode\": \"PL\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{dataAPIBaseUrl}}/companies/identifications",
													"host": [
														"{{dataAPIBaseUrl}}"
													],
													"path": [
														"companies",
														"identifications"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "GET",
							"item": [
								{
									"name": "companies - No filter",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    if (mustControlResult(pm, \"ICON-5226\")) {\r",
													"        checkResponse(pm, 400, \"companyId / externalId + countryCode / companyName + countryCode\", false);\r",
													"    }\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dataAPIBaseUrl}}/companies",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"companies"
											],
											"query": [
												{
													"key": "companyId",
													"value": "74344860",
													"description": "Company identifier",
													"disabled": true
												},
												{
													"key": "externalId",
													"value": "officia sint in",
													"description": "External identifier under the following format {repository}#{id}",
													"disabled": true
												},
												{
													"key": "companyName",
													"value": "coca",
													"description": "Company name",
													"disabled": true
												},
												{
													"key": "postalCode",
													"value": "officia sint in",
													"description": "Postal code, ZIP Code",
													"disabled": true
												},
												{
													"key": "city",
													"value": "officia sint in",
													"description": "City",
													"disabled": true
												},
												{
													"key": "state",
													"value": "officia sint in",
													"description": "State",
													"disabled": true
												},
												{
													"key": "countryCode",
													"value": "AT",
													"description": "Country code (ISO 3166 Alpha-2)",
													"disabled": true
												},
												{
													"key": "range",
													"value": "10-25",
													"description": "Pagination interval\n\nEx: Resources from an index to another included one (from 10 to 25 => ?range = 10-25).",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "companies - Filter companyId inexistant",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 200);\r",
													"    pm.expect(pm.response.json().length).to.eql(0);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dataAPIBaseUrl}}/companies?companyId=554c9dcc-62b0-3608-b96e-0c45272dc0d5895",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"companies"
											],
											"query": [
												{
													"key": "externalId",
													"value": "5279610",
													"description": "External identifier under the following format {repository}#{id}",
													"disabled": true
												},
												{
													"key": "companyName",
													"value": "coca",
													"description": "Company name",
													"disabled": true
												},
												{
													"key": "postalCode",
													"value": "officia sint in",
													"description": "Postal code, ZIP Code",
													"disabled": true
												},
												{
													"key": "city",
													"value": "officia sint in",
													"description": "City",
													"disabled": true
												},
												{
													"key": "state",
													"value": "officia sint in",
													"description": "State",
													"disabled": true
												},
												{
													"key": "countryCode",
													"value": "PL",
													"description": "Country code (ISO 3166 Alpha-2)",
													"disabled": true
												},
												{
													"key": "range",
													"value": "10-25",
													"description": "Pagination interval\n\nEx: Resources from an index to another included one (from 10 to 25 => ?range = 10-25).",
													"disabled": true
												},
												{
													"key": "companyId",
													"value": "554c9dcc-62b0-3608-b96e-0c45272dc0d5895"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "companies - Filter externalId wrong format",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    if (mustControlResult(pm, \"ICON-5226\")) {\r",
													"        checkResponse(pm, 400, \"externalId\", true);\r",
													"    }\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dataAPIBaseUrl}}/companies?externalId=sfqsfqz",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"companies"
											],
											"query": [
												{
													"key": "companyId",
													"value": "554c9dcc-62b0-3608-b96e-0c45272dc0d5",
													"description": "Company identifier",
													"disabled": true
												},
												{
													"key": "companyName",
													"value": "test",
													"description": "Company name",
													"disabled": true
												},
												{
													"key": "postalCode",
													"value": "officia sint in",
													"description": "Postal code, ZIP Code",
													"disabled": true
												},
												{
													"key": "city",
													"value": "officia sint in",
													"description": "City",
													"disabled": true
												},
												{
													"key": "state",
													"value": "officia sint in",
													"description": "State",
													"disabled": true
												},
												{
													"key": "countryCode",
													"value": "PL",
													"description": "Country code (ISO 3166 Alpha-2)",
													"disabled": true
												},
												{
													"key": "range",
													"value": "10-25",
													"description": "Pagination interval\n\nEx: Resources from an index to another included one (from 10 to 25 => ?range = 10-25).",
													"disabled": true
												},
												{
													"key": "externalId",
													"value": "sfqsfqz"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "companies - Filter externalId without country",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"countryCode\", false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dataAPIBaseUrl}}/companies?externalId=icon%23235279610",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"companies"
											],
											"query": [
												{
													"key": "companyId",
													"value": "554c9dcc-62b0-3608-b96e-0c45272dc0d5",
													"description": "Company identifier",
													"disabled": true
												},
												{
													"key": "companyName",
													"value": "test",
													"description": "Company name",
													"disabled": true
												},
												{
													"key": "postalCode",
													"value": "officia sint in",
													"description": "Postal code, ZIP Code",
													"disabled": true
												},
												{
													"key": "city",
													"value": "officia sint in",
													"description": "City",
													"disabled": true
												},
												{
													"key": "state",
													"value": "officia sint in",
													"description": "State",
													"disabled": true
												},
												{
													"key": "countryCode",
													"value": "PL",
													"description": "Country code (ISO 3166 Alpha-2)",
													"disabled": true
												},
												{
													"key": "range",
													"value": "10-25",
													"description": "Pagination interval\n\nEx: Resources from an index to another included one (from 10 to 25 => ?range = 10-25).",
													"disabled": true
												},
												{
													"key": "externalId",
													"value": "icon%23235279610"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "companies - Filter externalId with wrong country",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 200, null, true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dataAPIBaseUrl}}/companies?externalId=vat-number%23235423209690&countryCode=AT",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"companies"
											],
											"query": [
												{
													"key": "companyId",
													"value": "554c9dcc-62b0-3608-b96e-0c45272dc0d5",
													"description": "Company identifier",
													"disabled": true
												},
												{
													"key": "companyName",
													"value": "test",
													"description": "Company name",
													"disabled": true
												},
												{
													"key": "postalCode",
													"value": "officia sint in",
													"description": "Postal code, ZIP Code",
													"disabled": true
												},
												{
													"key": "city",
													"value": "officia sint in",
													"description": "City",
													"disabled": true
												},
												{
													"key": "state",
													"value": "officia sint in",
													"description": "State",
													"disabled": true
												},
												{
													"key": "range",
													"value": "10-25",
													"description": "Pagination interval\n\nEx: Resources from an index to another included one (from 10 to 25 => ?range = 10-25).",
													"disabled": true
												},
												{
													"key": "externalId",
													"value": "vat-number%23235423209690"
												},
												{
													"key": "countryCode",
													"value": "AT"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "companies - Filter externalId with unknown externalId",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 200, null, true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dataAPIBaseUrl}}/companies?externalId=vat-number%23235423209690&countryCode=PL",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"companies"
											],
											"query": [
												{
													"key": "companyId",
													"value": "554c9dcc-62b0-3608-b96e-0c45272dc0d5",
													"description": "Company identifier",
													"disabled": true
												},
												{
													"key": "companyName",
													"value": "test",
													"description": "Company name",
													"disabled": true
												},
												{
													"key": "postalCode",
													"value": "officia sint in",
													"description": "Postal code, ZIP Code",
													"disabled": true
												},
												{
													"key": "city",
													"value": "officia sint in",
													"description": "City",
													"disabled": true
												},
												{
													"key": "state",
													"value": "officia sint in",
													"description": "State",
													"disabled": true
												},
												{
													"key": "range",
													"value": "10-25",
													"description": "Pagination interval\n\nEx: Resources from an index to another included one (from 10 to 25 => ?range = 10-25).",
													"disabled": true
												},
												{
													"key": "externalId",
													"value": "vat-number%23235423209690"
												},
												{
													"key": "countryCode",
													"value": "PL"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "companies - Filter countryCode wrong format",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"countryCode\", false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dataAPIBaseUrl}}/companies?countryCode=PL8",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"companies"
											],
											"query": [
												{
													"key": "companyId",
													"value": "74344860",
													"description": "Company identifier",
													"disabled": true
												},
												{
													"key": "externalId",
													"value": "officia sint in",
													"description": "External identifier under the following format {repository}#{id}",
													"disabled": true
												},
												{
													"key": "companyName",
													"value": "coca",
													"description": "Company name",
													"disabled": true
												},
												{
													"key": "postalCode",
													"value": "officia sint in",
													"description": "Postal code, ZIP Code",
													"disabled": true
												},
												{
													"key": "city",
													"value": "officia sint in",
													"description": "City",
													"disabled": true
												},
												{
													"key": "state",
													"value": "officia sint in",
													"description": "State",
													"disabled": true
												},
												{
													"key": "range",
													"value": "10-25",
													"description": "Pagination interval\n\nEx: Resources from an index to another included one (from 10 to 25 => ?range = 10-25).",
													"disabled": true
												},
												{
													"key": "countryCode",
													"value": "PL8"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "companies - Filter countryCode without companyName",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    if (mustControlResult(pm, \"ICON-5226\")) {\r",
													"        checkResponse(pm, 400, \"companyName\", false);\r",
													"    }\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dataAPIBaseUrl}}/companies?countryCode=PL",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"companies"
											],
											"query": [
												{
													"key": "companyId",
													"value": "74344860",
													"description": "Company identifier",
													"disabled": true
												},
												{
													"key": "externalId",
													"value": "easy#00011847439049",
													"description": "External identifier under the following format {repository}#{id}",
													"disabled": true
												},
												{
													"key": "companyName",
													"value": "Paweł",
													"description": "Company name",
													"disabled": true
												},
												{
													"key": "postalCode",
													"value": "officia sint in",
													"description": "Postal code, ZIP Code",
													"disabled": true
												},
												{
													"key": "city",
													"value": "officia sint in",
													"description": "City",
													"disabled": true
												},
												{
													"key": "state",
													"value": "officia sint in",
													"description": "State",
													"disabled": true
												},
												{
													"key": "countryCode",
													"value": "PL"
												},
												{
													"key": "range",
													"value": "350-360",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "companies - Wrong range : text",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"range\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dataAPIBaseUrl}}/companies?companyName=Paweł&countryCode=PL&range=fsdfsd",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"companies"
											],
											"query": [
												{
													"key": "companyId",
													"value": "74344860",
													"description": "Company identifier",
													"disabled": true
												},
												{
													"key": "externalId",
													"value": "easy#00011847439049",
													"description": "External identifier under the following format {repository}#{id}",
													"disabled": true
												},
												{
													"key": "companyName",
													"value": "Paweł",
													"description": "Company name"
												},
												{
													"key": "postalCode",
													"value": "officia sint in",
													"description": "Postal code, ZIP Code",
													"disabled": true
												},
												{
													"key": "city",
													"value": "officia sint in",
													"description": "City",
													"disabled": true
												},
												{
													"key": "state",
													"value": "officia sint in",
													"description": "State",
													"disabled": true
												},
												{
													"key": "countryCode",
													"value": "PL"
												},
												{
													"key": "range",
													"value": "fsdfsd"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "companies - Wrong range : Negative Offset",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"range\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dataAPIBaseUrl}}/companies?countryCode=PL&range=-1-3",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"companies"
											],
											"query": [
												{
													"key": "companyId",
													"value": "74344860",
													"description": "Company identifier",
													"disabled": true
												},
												{
													"key": "externalId",
													"value": "easy#00011847439049",
													"description": "External identifier under the following format {repository}#{id}",
													"disabled": true
												},
												{
													"key": "companyName",
													"value": "Paweł",
													"description": "Company name",
													"disabled": true
												},
												{
													"key": "postalCode",
													"value": "officia sint in",
													"description": "Postal code, ZIP Code",
													"disabled": true
												},
												{
													"key": "city",
													"value": "officia sint in",
													"description": "City",
													"disabled": true
												},
												{
													"key": "state",
													"value": "officia sint in",
													"description": "State",
													"disabled": true
												},
												{
													"key": "countryCode",
													"value": "PL"
												},
												{
													"key": "range",
													"value": "-1-3"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "companies - Wrong range : Negative Limit",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"range\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dataAPIBaseUrl}}/companies?countryCode=PL&range=1--1",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"companies"
											],
											"query": [
												{
													"key": "companyId",
													"value": "74344860",
													"description": "Company identifier",
													"disabled": true
												},
												{
													"key": "externalId",
													"value": "easy#00011847439049",
													"description": "External identifier under the following format {repository}#{id}",
													"disabled": true
												},
												{
													"key": "companyName",
													"value": "Paweł",
													"description": "Company name",
													"disabled": true
												},
												{
													"key": "postalCode",
													"value": "officia sint in",
													"description": "Postal code, ZIP Code",
													"disabled": true
												},
												{
													"key": "city",
													"value": "officia sint in",
													"description": "City",
													"disabled": true
												},
												{
													"key": "state",
													"value": "officia sint in",
													"description": "State",
													"disabled": true
												},
												{
													"key": "countryCode",
													"value": "PL"
												},
												{
													"key": "range",
													"value": "1--1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "companies - Wrong range : Limit > Maxpage",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    if (mustControlResult(pm, \"ICON-5227\")) {\r",
													"        checkPagination(pm, \"companies\", 20, null, pm.request.url.query.get(\"range\"));\r",
													"    }\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dataAPIBaseUrl}}/companies?countryCode=PL&range=3-360",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"companies"
											],
											"query": [
												{
													"key": "companyId",
													"value": "74344860",
													"description": "Company identifier",
													"disabled": true
												},
												{
													"key": "externalId",
													"value": "easy#00011847439049",
													"description": "External identifier under the following format {repository}#{id}",
													"disabled": true
												},
												{
													"key": "companyName",
													"value": "Paweł",
													"description": "Company name",
													"disabled": true
												},
												{
													"key": "postalCode",
													"value": "officia sint in",
													"description": "Postal code, ZIP Code",
													"disabled": true
												},
												{
													"key": "city",
													"value": "officia sint in",
													"description": "City",
													"disabled": true
												},
												{
													"key": "state",
													"value": "officia sint in",
													"description": "State",
													"disabled": true
												},
												{
													"key": "countryCode",
													"value": "PL"
												},
												{
													"key": "range",
													"value": "3-360"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "repositories",
							"item": [
								{
									"name": "repositories - Wrong countryCode",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"countryCode\", false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dataAPIBaseUrl}}/companies/repositories?countryCode=F5",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"companies",
												"repositories"
											],
											"query": [
												{
													"key": "countryCode",
													"value": "F5",
													"description": "(Required) Country code (ISO 3166 Alpha-2)"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "financials",
							"item": [
								{
									"name": "financials - No filter",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"companyId / externarlId + countryCode\", false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dataAPIBaseUrl}}/companies/financials",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"companies",
												"financials"
											]
										}
									},
									"response": []
								},
								{
									"name": "financials - Unknwon companyId",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 200, null, true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dataAPIBaseUrl}}/companies/financials?companyId=1233",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"companies",
												"financials"
											],
											"query": [
												{
													"key": "companyId",
													"value": "1233"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "financials - Wrong countryCode",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"countryCode\", false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dataAPIBaseUrl}}/companies/financials?countryCode=FR8",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"companies",
												"financials"
											],
											"query": [
												{
													"key": "countryCode",
													"value": "FR8"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "financials - No countryCode + externalId",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"countryCode\", false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dataAPIBaseUrl}}/companies/financials?externalId=FR8",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"companies",
												"financials"
											],
											"query": [
												{
													"key": "externalId",
													"value": "FR8"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "financials - Unknown externalId",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 200, null, true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dataAPIBaseUrl}}/companies/financials?externalId=giid%23233331383239323531334070&countryCode=FR",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"companies",
												"financials"
											],
											"query": [
												{
													"key": "externalId",
													"value": "giid%23233331383239323531334070"
												},
												{
													"key": "countryCode",
													"value": "FR"
												}
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "countries",
					"item": [
						{
							"name": "countries - Wrong countryCode",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(request.name, function () {\r",
											"    if (mustControlResult(pm, \"ICON-5233\")) {\r",
											"        checkResponse(pm, 404, null, false);\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "{{idToken}}",
										"type": "text"
									},
									{
										"key": "x-api-key",
										"value": "{{dataAPIApiKey}}",
										"type": "text"
									},
									{
										"key": "Accept-language",
										"value": "FR",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{dataAPIBaseUrl}}/countries/:countryCode",
									"host": [
										"{{dataAPIBaseUrl}}"
									],
									"path": [
										"countries",
										":countryCode"
									],
									"variable": [
										{
											"key": "countryCode",
											"value": "EN",
											"description": "(Required) ISO-3166 alpha2 code"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "countries - Wrong Accept-language",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(request.name, function () {\r",
											"    checkResponse(pm, 200);\r",
											"    var responseJson = pm.response.json();\r",
											"    pm.expect(responseJson.descriptions[0].language).to.eql(\"en\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "{{idToken}}",
										"type": "text"
									},
									{
										"key": "x-api-key",
										"value": "{{dataAPIApiKey}}",
										"type": "text"
									},
									{
										"key": "Accept-language",
										"value": "FR12",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{dataAPIBaseUrl}}/countries/:countryCode",
									"host": [
										"{{dataAPIBaseUrl}}"
									],
									"path": [
										"countries",
										":countryCode"
									],
									"variable": [
										{
											"key": "countryCode",
											"value": "FR",
											"description": "(Required) ISO-3166 alpha2 code"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "notifications",
					"item": [
						{
							"name": "/:notificationId",
							"item": [
								{
									"name": "notifications - Wrong id pattern",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    if (mustControlResult(pm, \"ICON-5238\")) {\r",
													"        checkResponse(pm, 404, null, false);\r",
													"    }\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dataAPIBaseUrl}}/notifications/eazrezarezrzerzerz",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"notifications",
												"eazrezarezrzerzerz"
											],
											"query": [
												{
													"key": "deliveryDateFrom",
													"value": "2021-09-21",
													"description": "Date to get the notifications from",
													"disabled": true
												},
												{
													"key": "deliveryDateTo",
													"value": "2021-09-21",
													"description": "Date to get the notifications til",
													"disabled": true
												},
												{
													"key": "range",
													"value": "10-25",
													"description": "Pagination interval\n\nEx: Resources from an index to another included one (from 10 to 25 => ?range = 10-25).",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "notifications - Unknow id",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 404, null, false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dataAPIBaseUrl}}/notifications/123",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"notifications",
												"123"
											],
											"query": [
												{
													"key": "deliveryDateFrom",
													"value": "2021-09-21",
													"description": "Date to get the notifications from",
													"disabled": true
												},
												{
													"key": "deliveryDateTo",
													"value": "2021-09-21",
													"description": "Date to get the notifications til",
													"disabled": true
												},
												{
													"key": "range",
													"value": "10-25",
													"description": "Pagination interval\n\nEx: Resources from an index to another included one (from 10 to 25 => ?range = 10-25).",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "notifications - Wrong pattern : deliveryDateFrom",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(request.name, function () {\r",
											"    if (mustControlResult(pm, \"ICON-5231\")) {\r",
											"        checkResponse(pm, 400, \"deliveryDateFrom\");\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "{{idToken}}",
										"type": "text"
									},
									{
										"key": "x-api-key",
										"value": "{{dataAPIApiKey}}",
										"type": "text"
									},
									{
										"key": "Accept-Language",
										"value": "FR",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{dataAPIBaseUrl}}/notifications?deliveryDateFrom=dzadza&deliveryDateTo=2021-12-08",
									"host": [
										"{{dataAPIBaseUrl}}"
									],
									"path": [
										"notifications"
									],
									"query": [
										{
											"key": "deliveryDateFrom",
											"value": "dzadza",
											"description": "Date to get the notifications from"
										},
										{
											"key": "deliveryDateTo",
											"value": "2021-12-08",
											"description": "Date to get the notifications til"
										},
										{
											"key": "range",
											"value": "10-25",
											"description": "Pagination interval\n\nEx: Resources from an index to another included one (from 10 to 25 => ?range = 10-25).",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "notifications - Wrong data : deliveryDateFrom",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(request.name, function () {\r",
											"    if (mustControlResult(pm, \"ICON-5231\")) {\r",
											"        checkResponse(pm, 400, \"deliveryDateFrom\");\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "{{idToken}}",
										"type": "text"
									},
									{
										"key": "x-api-key",
										"value": "{{dataAPIApiKey}}",
										"type": "text"
									},
									{
										"key": "Accept-Language",
										"value": "FR",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{dataAPIBaseUrl}}/notifications?deliveryDateFrom=2021-13-08&deliveryDateTo=2021-12-08",
									"host": [
										"{{dataAPIBaseUrl}}"
									],
									"path": [
										"notifications"
									],
									"query": [
										{
											"key": "deliveryDateFrom",
											"value": "2021-13-08",
											"description": "Date to get the notifications from"
										},
										{
											"key": "deliveryDateTo",
											"value": "2021-12-08",
											"description": "Date to get the notifications til"
										},
										{
											"key": "range",
											"value": "10-25",
											"description": "Pagination interval\n\nEx: Resources from an index to another included one (from 10 to 25 => ?range = 10-25).",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "notifications - Wrong interval : deliveryDateFrom",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(request.name, function () {\r",
											"    if (mustControlResult(pm, \"ICON-5232\")) {\r",
											"        checkResponse(pm, 400, \"deliveryDateFrom\", false);\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "{{idToken}}",
										"type": "text"
									},
									{
										"key": "x-api-key",
										"value": "{{dataAPIApiKey}}",
										"type": "text"
									},
									{
										"key": "Accept-Language",
										"value": "FR",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{dataAPIBaseUrl}}/notifications?deliveryDateFrom=2021-12-08&deliveryDateTo=2021-12-01",
									"host": [
										"{{dataAPIBaseUrl}}"
									],
									"path": [
										"notifications"
									],
									"query": [
										{
											"key": "deliveryDateFrom",
											"value": "2021-12-08",
											"description": "Date to get the notifications from"
										},
										{
											"key": "deliveryDateTo",
											"value": "2021-12-01",
											"description": "Date to get the notifications til"
										},
										{
											"key": "range",
											"value": "10-25",
											"description": "Pagination interval\n\nEx: Resources from an index to another included one (from 10 to 25 => ?range = 10-25).",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "notifications - Range text",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(request.name, function () {\r",
											"    checkResponse(pm, 400, \"range\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "{{idToken}}",
										"type": "text"
									},
									{
										"key": "x-api-key",
										"value": "{{dataAPIApiKey}}",
										"type": "text"
									},
									{
										"key": "Accept-Language",
										"value": "FR",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{dataAPIBaseUrl}}/notifications?range=tezrezr",
									"host": [
										"{{dataAPIBaseUrl}}"
									],
									"path": [
										"notifications"
									],
									"query": [
										{
											"key": "deliveryDateFrom",
											"value": "2021-09-21",
											"description": "Date to get the notifications from",
											"disabled": true
										},
										{
											"key": "deliveryDateTo",
											"value": "2021-09-21",
											"description": "Date to get the notifications til",
											"disabled": true
										},
										{
											"key": "range",
											"value": "tezrezr"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "notifications - Negative Offset",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(request.name, function () {\r",
											"    checkResponse(pm, 400, \"range\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "{{idToken}}",
										"type": "text"
									},
									{
										"key": "x-api-key",
										"value": "{{dataAPIApiKey}}",
										"type": "text"
									},
									{
										"key": "Accept-Language",
										"value": "FR",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{dataAPIBaseUrl}}/notifications?range=-1-5",
									"host": [
										"{{dataAPIBaseUrl}}"
									],
									"path": [
										"notifications"
									],
									"query": [
										{
											"key": "deliveryDateFrom",
											"value": "2021-09-21",
											"description": "Date to get the notifications from",
											"disabled": true
										},
										{
											"key": "deliveryDateTo",
											"value": "2021-09-21",
											"description": "Date to get the notifications til",
											"disabled": true
										},
										{
											"key": "range",
											"value": "-1-5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "notifications - Negative limit",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(request.name, function () {\r",
											"    checkResponse(pm, 400, \"range\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "{{idToken}}",
										"type": "text"
									},
									{
										"key": "x-api-key",
										"value": "{{dataAPIApiKey}}",
										"type": "text"
									},
									{
										"key": "Accept-Language",
										"value": "FR",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{dataAPIBaseUrl}}/notifications?range=1--5",
									"host": [
										"{{dataAPIBaseUrl}}"
									],
									"path": [
										"notifications"
									],
									"query": [
										{
											"key": "deliveryDateFrom",
											"value": "2021-09-21",
											"description": "Date to get the notifications from",
											"disabled": true
										},
										{
											"key": "deliveryDateTo",
											"value": "2021-09-21",
											"description": "Date to get the notifications til",
											"disabled": true
										},
										{
											"key": "range",
											"value": "1--5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "notifications - Limit > Maxpage",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(request.name, function () {\r",
											"    if (mustControlResult(pm, \"ICON-5227\")) {\r",
											"        checkPagination(pm, \"notifications\", 20, null, pm.request.url.query.get(\"range\"));\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "{{idToken}}",
										"type": "text"
									},
									{
										"key": "x-api-key",
										"value": "{{dataAPIApiKey}}",
										"type": "text"
									},
									{
										"key": "Accept-Language",
										"value": "FR",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{dataAPIBaseUrl}}/notifications?range=10-22",
									"host": [
										"{{dataAPIBaseUrl}}"
									],
									"path": [
										"notifications"
									],
									"query": [
										{
											"key": "deliveryDateFrom",
											"value": "2021-09-21",
											"description": "Date to get the notifications from",
											"disabled": true
										},
										{
											"key": "deliveryDateTo",
											"value": "2021-09-21",
											"description": "Date to get the notifications til",
											"disabled": true
										},
										{
											"key": "range",
											"value": "10-22"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "publications",
					"item": [
						{
							"name": "GET",
							"item": [
								{
									"name": "publications - No filter",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"deliveryId\", true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dataAPIBaseUrl}}/publications",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"publications"
											],
											"query": [
												{
													"key": "monitoringId",
													"value": "officia sint in",
													"description": "Monitoring identifier",
													"disabled": true
												},
												{
													"key": "deliveryId",
													"value": "b33f5da5-392b-ffb4-c5A9-cBB0ffDC",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "POST",
							"item": [
								{
									"name": "publications/orders - No body",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"body\", true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dataAPIBaseUrl}}/publications/orders",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"publications",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "publications/orders - Empty body",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"assessments and/or financials\", false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dataAPIBaseUrl}}/publications/orders",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"publications",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "publications/orders - Empty assessment array",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"assessments\", false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"assessments\": []\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dataAPIBaseUrl}}/publications/orders",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"publications",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "publications/orders - Empty assessment",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    if (mustControlResult(pm, \"ICON-5234\")) {\r",
													"        checkResponse(pm, 400, \"assessments\", false);\r",
													"    }\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"assessments\": [{ \"slug\" :\"  \"}]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dataAPIBaseUrl}}/publications/orders",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"publications",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "publications/orders - Invalid assessment",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    if (mustControlResult(pm, \"ICON-5234\")) {\r",
													"        checkResponse(pm, 400, \"assessments\", false);\r",
													"    }\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"assessments\": [{ \"slug\" :\"mySlug\"}]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dataAPIBaseUrl}}/publications/orders",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"publications",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "publications/orders - Invalid companyId",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"companyId\", false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"companyId\": \"be0ac5d4-1272-395f-bb00-d8e1ef190b3ctessd\",\r\n    \"assessments\": [\r\n        {\r\n            \"slug\": \"debtor-risk-assessment\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dataAPIBaseUrl}}/publications/orders",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"publications",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "publications/orders - Invalid companyIdentificationId",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"companyIdentificationId\", false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"companyIdentificationId\": \"be0ac5d4-1272-395f-bb00-d8e1ef190b3ctessd\",\r\n    \"assessments\": [\r\n        {\r\n            \"slug\": \"debtor-risk-assessment\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dataAPIBaseUrl}}/publications/orders",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"publications",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "publications/orders - ExternalId Missing slug",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"externalId\", false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"externalId\": \"be0ac5d4-1272-395f-bb00-d8e1ef190b3ctessd\",\r\n    \"assessments\": [\r\n        {\r\n            \"slug\": \"debtor-risk-assessment\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dataAPIBaseUrl}}/publications/orders",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"publications",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "publications/orders - ExternalId Missing countryCode",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"countryCode\", false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"externalId\": \"VAT#123\",\r\n    \"assessments\": [\r\n        {\r\n            \"slug\": \"debtor-risk-assessment\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dataAPIBaseUrl}}/publications/orders",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"publications",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "publications/orders - ExternalId Wrong countryCode",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"externalId\", false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"externalId\": \"VAT#123\",\r\n    \"countryCode\":\"AT\",\r\n    \"assessments\": [\r\n        {\r\n            \"slug\": \"debtor-risk-assessment\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dataAPIBaseUrl}}/publications/orders",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"publications",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "publications/orders - CRA No countryCode",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"countryCode\", false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"assessments\": [\r\n        {\r\n            \"slug\": \"country-risk-assessment\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dataAPIBaseUrl}}/publications/orders",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"publications",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "publications/orders - CRA Uncovered country",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"countryCode\", false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"countryCode\": \"EN\",\r\n    \"assessments\": [\r\n        {\r\n            \"slug\": \"country-risk-assessment\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dataAPIBaseUrl}}/publications/orders",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"publications",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "publications/orders - CRA Covered country no slug",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"countryCode\", false, \"Assessment 'country-risk-assessment' is not available in this country\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"countryCode\": \"ZL\",\r\n    \"assessments\": [\r\n        {\r\n            \"slug\": \"country-risk-assessment\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dataAPIBaseUrl}}/publications/orders",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"publications",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "publications/orders - SRA No countryCode",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"countryCode\", false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"assessments\": [\r\n        {\r\n            \"naceCode\": \"PL\",\r\n            \"slug\": \"sector-risk-assessment\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dataAPIBaseUrl}}/publications/orders",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"publications",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "publications/orders - SRA No naceCode",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"naceCode\", false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"countryCode\": \"PL\",\r\n    \"assessments\": [\r\n        {\r\n            \"slug\": \"sector-risk-assessment\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dataAPIBaseUrl}}/publications/orders",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"publications",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "publications/orders - SRA Wrong naceCode",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"naceCode\", false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"countryCode\": \"PL\",\r\n    \"assessments\": [\r\n        {\r\n            \"naceCode\": \"naceCode\",\r\n            \"slug\": \"sector-risk-assessment\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dataAPIBaseUrl}}/publications/orders",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"publications",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "publications/orders - SRA several SRA",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    if (mustControlResult(pm, \"ICON-5510\")) {\r",
													"        checkResponse(pm, 202, \"naceCode\", false);\r",
													"        var responseJson = pm.response.json();\r",
													"        pm.expect(responseJson.publications.length).to.eql(2);\r",
													"    }\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"countryCode\": \"PL\",\r\n    \"assessments\": [\r\n        {\r\n            \"naceCode\": \"9000\",\r\n            \"slug\": \"sector-risk-assessment\"\r\n        },\r\n        {\r\n            \"naceCode\": \"9001\",\r\n            \"slug\": \"sector-risk-assessment\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dataAPIBaseUrl}}/publications/orders",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"publications",
												"orders"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "monitorings",
					"item": [
						{
							"name": "GET",
							"item": [
								{
									"name": "monitorings - Range text",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"range\", false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dataAPIBaseUrl}}/monitorings?range=dsqdsqdsqdsq",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"monitorings"
											],
											"query": [
												{
													"key": "companyId",
													"value": "officia sint in",
													"description": "Monitoring identifier",
													"disabled": true
												},
												{
													"key": "assessmentSlugs",
													"value": "b33f5da5-392b-ffb4-c5A9-cBB0ffDC",
													"disabled": true
												},
												{
													"key": "startDateFrom",
													"value": "",
													"disabled": true
												},
												{
													"key": "startDateTo",
													"value": "",
													"disabled": true
												},
												{
													"key": "endDateFrom",
													"value": "",
													"disabled": true
												},
												{
													"key": "endDateTo",
													"value": "",
													"disabled": true
												},
												{
													"key": "countryCode",
													"value": "",
													"disabled": true
												},
												{
													"key": "naceCode",
													"value": "",
													"disabled": true
												},
												{
													"key": "range",
													"value": "dsqdsqdsqdsq"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "monitorings  - Negative Offset",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"range\", false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dataAPIBaseUrl}}/monitorings?range=-1-6",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"monitorings"
											],
											"query": [
												{
													"key": "companyId",
													"value": "officia sint in",
													"description": "Monitoring identifier",
													"disabled": true
												},
												{
													"key": "assessmentSlugs",
													"value": "b33f5da5-392b-ffb4-c5A9-cBB0ffDC",
													"disabled": true
												},
												{
													"key": "startDateFrom",
													"value": "",
													"disabled": true
												},
												{
													"key": "startDateTo",
													"value": "",
													"disabled": true
												},
												{
													"key": "endDateFrom",
													"value": "",
													"disabled": true
												},
												{
													"key": "endDateTo",
													"value": "",
													"disabled": true
												},
												{
													"key": "countryCode",
													"value": "",
													"disabled": true
												},
												{
													"key": "naceCode",
													"value": "",
													"disabled": true
												},
												{
													"key": "range",
													"value": "-1-6"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "monitorings - Negative limit",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"range\", false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dataAPIBaseUrl}}/monitorings?range=1--6",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"monitorings"
											],
											"query": [
												{
													"key": "companyId",
													"value": "officia sint in",
													"description": "Monitoring identifier",
													"disabled": true
												},
												{
													"key": "assessmentSlugs",
													"value": "b33f5da5-392b-ffb4-c5A9-cBB0ffDC",
													"disabled": true
												},
												{
													"key": "startDateFrom",
													"value": "",
													"disabled": true
												},
												{
													"key": "startDateTo",
													"value": "",
													"disabled": true
												},
												{
													"key": "endDateFrom",
													"value": "",
													"disabled": true
												},
												{
													"key": "endDateTo",
													"value": "",
													"disabled": true
												},
												{
													"key": "countryCode",
													"value": "",
													"disabled": true
												},
												{
													"key": "naceCode",
													"value": "",
													"disabled": true
												},
												{
													"key": "range",
													"value": "1--6"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "monitorings - Limit > Maxpage",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    if (mustControlResult(pm, \"ICON-5227\")) {\r",
													"        checkPagination(pm, \"monitorings\", 20, null, pm.request.url.query.get(\"range\"));\r",
													"    }\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dataAPIBaseUrl}}/monitorings?range=10-26",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"monitorings"
											],
											"query": [
												{
													"key": "companyId",
													"value": "officia sint in",
													"description": "Monitoring identifier",
													"disabled": true
												},
												{
													"key": "assessmentSlugs",
													"value": "b33f5da5-392b-ffb4-c5A9-cBB0ffDC",
													"disabled": true
												},
												{
													"key": "startDateFrom",
													"value": "",
													"disabled": true
												},
												{
													"key": "startDateTo",
													"value": "",
													"disabled": true
												},
												{
													"key": "endDateFrom",
													"value": "",
													"disabled": true
												},
												{
													"key": "endDateTo",
													"value": "",
													"disabled": true
												},
												{
													"key": "countryCode",
													"value": "",
													"disabled": true
												},
												{
													"key": "naceCode",
													"value": "",
													"disabled": true
												},
												{
													"key": "range",
													"value": "10-26"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "monitorings - Unknown company",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 200, null, true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dataAPIBaseUrl}}/monitorings?companyId=111",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"monitorings"
											],
											"query": [
												{
													"key": "companyId",
													"value": "111",
													"description": "Monitoring identifier"
												},
												{
													"key": "assessmentSlugs",
													"value": "b33f5da5-392b-ffb4-c5A9-cBB0ffDC",
													"disabled": true
												},
												{
													"key": "startDateFrom",
													"value": "",
													"disabled": true
												},
												{
													"key": "startDateTo",
													"value": "",
													"disabled": true
												},
												{
													"key": "endDateFrom",
													"value": "",
													"disabled": true
												},
												{
													"key": "endDateTo",
													"value": "",
													"disabled": true
												},
												{
													"key": "countryCode",
													"value": "",
													"disabled": true
												},
												{
													"key": "naceCode",
													"value": "",
													"disabled": true
												},
												{
													"key": "range",
													"value": "dsqdsqdsqdsq",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "monitorings - Unknown Slug",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 200, null, true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dataAPIBaseUrl}}/monitorings?assessmentSlugs=test",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"monitorings"
											],
											"query": [
												{
													"key": "companyId",
													"value": "officia sint in",
													"description": "Monitoring identifier",
													"disabled": true
												},
												{
													"key": "assessmentSlugs",
													"value": "test"
												},
												{
													"key": "startDateFrom",
													"value": "",
													"disabled": true
												},
												{
													"key": "startDateTo",
													"value": "",
													"disabled": true
												},
												{
													"key": "endDateFrom",
													"value": "",
													"disabled": true
												},
												{
													"key": "endDateTo",
													"value": "",
													"disabled": true
												},
												{
													"key": "countryCode",
													"value": "",
													"disabled": true
												},
												{
													"key": "naceCode",
													"value": "",
													"disabled": true
												},
												{
													"key": "range",
													"value": "dsqdsqdsqdsq",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "monitorings - Wrong pattern : startDateFrom",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"startDateFrom\", false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dataAPIBaseUrl}}/monitorings?startDateFrom=dfdsfdsf",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"monitorings"
											],
											"query": [
												{
													"key": "companyId",
													"value": "officia sint in",
													"description": "Monitoring identifier",
													"disabled": true
												},
												{
													"key": "assessmentSlugs",
													"value": "test",
													"disabled": true
												},
												{
													"key": "startDateFrom",
													"value": "dfdsfdsf"
												},
												{
													"key": "startDateTo",
													"value": "",
													"disabled": true
												},
												{
													"key": "endDateFrom",
													"value": "",
													"disabled": true
												},
												{
													"key": "endDateTo",
													"value": "",
													"disabled": true
												},
												{
													"key": "countryCode",
													"value": "",
													"disabled": true
												},
												{
													"key": "naceCode",
													"value": "",
													"disabled": true
												},
												{
													"key": "range",
													"value": "dsqdsqdsqdsq",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "monitorings - Wrong pattern : startDateTo",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"startDateTo\", false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dataAPIBaseUrl}}/monitorings?startDateTo=sdsds",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"monitorings"
											],
											"query": [
												{
													"key": "companyId",
													"value": "officia sint in",
													"description": "Monitoring identifier",
													"disabled": true
												},
												{
													"key": "assessmentSlugs",
													"value": "test",
													"disabled": true
												},
												{
													"key": "startDateFrom",
													"value": "dfdsfdsf",
													"disabled": true
												},
												{
													"key": "startDateTo",
													"value": "sdsds"
												},
												{
													"key": "endDateFrom",
													"value": "",
													"disabled": true
												},
												{
													"key": "endDateTo",
													"value": "",
													"disabled": true
												},
												{
													"key": "countryCode",
													"value": "",
													"disabled": true
												},
												{
													"key": "naceCode",
													"value": "",
													"disabled": true
												},
												{
													"key": "range",
													"value": "dsqdsqdsqdsq",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "monitorings - Wrong pattern : endDateFrom",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"endDateFrom\", false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dataAPIBaseUrl}}/monitorings?endDateFrom=dfdsfdsf",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"monitorings"
											],
											"query": [
												{
													"key": "companyId",
													"value": "officia sint in",
													"description": "Monitoring identifier",
													"disabled": true
												},
												{
													"key": "assessmentSlugs",
													"value": "test",
													"disabled": true
												},
												{
													"key": "startDateFrom",
													"value": "",
													"disabled": true
												},
												{
													"key": "startDateTo",
													"value": "",
													"disabled": true
												},
												{
													"key": "endDateFrom",
													"value": "dfdsfdsf"
												},
												{
													"key": "endDateTo",
													"value": "",
													"disabled": true
												},
												{
													"key": "countryCode",
													"value": "",
													"disabled": true
												},
												{
													"key": "naceCode",
													"value": "",
													"disabled": true
												},
												{
													"key": "range",
													"value": "dsqdsqdsqdsq",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "monitorings - Wrong pattern : endDateTo",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"endDateTo\", false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dataAPIBaseUrl}}/monitorings?endDateTo=dfdsfdsf",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"monitorings"
											],
											"query": [
												{
													"key": "companyId",
													"value": "officia sint in",
													"description": "Monitoring identifier",
													"disabled": true
												},
												{
													"key": "assessmentSlugs",
													"value": "test",
													"disabled": true
												},
												{
													"key": "startDateFrom",
													"value": "",
													"disabled": true
												},
												{
													"key": "startDateTo",
													"value": "",
													"disabled": true
												},
												{
													"key": "endDateFrom",
													"value": "",
													"disabled": true
												},
												{
													"key": "endDateTo",
													"value": "dfdsfdsf"
												},
												{
													"key": "countryCode",
													"value": "",
													"disabled": true
												},
												{
													"key": "naceCode",
													"value": "",
													"disabled": true
												},
												{
													"key": "range",
													"value": "dsqdsqdsqdsq",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "monitorings - Wrong data : startDateFrom",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"startDateFrom\", false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dataAPIBaseUrl}}/monitorings?startDateFrom=2021-13-67",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"monitorings"
											],
											"query": [
												{
													"key": "companyId",
													"value": "officia sint in",
													"description": "Monitoring identifier",
													"disabled": true
												},
												{
													"key": "assessmentSlugs",
													"value": "test",
													"disabled": true
												},
												{
													"key": "startDateFrom",
													"value": "2021-13-67"
												},
												{
													"key": "startDateTo",
													"value": "",
													"disabled": true
												},
												{
													"key": "endDateFrom",
													"value": "",
													"disabled": true
												},
												{
													"key": "endDateTo",
													"value": "",
													"disabled": true
												},
												{
													"key": "countryCode",
													"value": "",
													"disabled": true
												},
												{
													"key": "naceCode",
													"value": "",
													"disabled": true
												},
												{
													"key": "range",
													"value": "dsqdsqdsqdsq",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "monitorings - Wrong data : startDateTo",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"startDateTo\", false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dataAPIBaseUrl}}/monitorings?startDateTo=2021-13-67",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"monitorings"
											],
											"query": [
												{
													"key": "companyId",
													"value": "officia sint in",
													"description": "Monitoring identifier",
													"disabled": true
												},
												{
													"key": "assessmentSlugs",
													"value": "test",
													"disabled": true
												},
												{
													"key": "startDateFrom",
													"value": "",
													"disabled": true
												},
												{
													"key": "startDateTo",
													"value": "2021-13-67"
												},
												{
													"key": "endDateFrom",
													"value": "",
													"disabled": true
												},
												{
													"key": "endDateTo",
													"value": "",
													"disabled": true
												},
												{
													"key": "countryCode",
													"value": "",
													"disabled": true
												},
												{
													"key": "naceCode",
													"value": "",
													"disabled": true
												},
												{
													"key": "range",
													"value": "dsqdsqdsqdsq",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "monitorings - Wrong data : endDateFrom",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"endDateFrom\", false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dataAPIBaseUrl}}/monitorings?endDateFrom=2021-13-67",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"monitorings"
											],
											"query": [
												{
													"key": "companyId",
													"value": "officia sint in",
													"description": "Monitoring identifier",
													"disabled": true
												},
												{
													"key": "assessmentSlugs",
													"value": "test",
													"disabled": true
												},
												{
													"key": "startDateFrom",
													"value": "2021-13-67",
													"disabled": true
												},
												{
													"key": "startDateTo",
													"value": "",
													"disabled": true
												},
												{
													"key": "endDateFrom",
													"value": "2021-13-67"
												},
												{
													"key": "endDateTo",
													"value": "",
													"disabled": true
												},
												{
													"key": "countryCode",
													"value": "",
													"disabled": true
												},
												{
													"key": "naceCode",
													"value": "",
													"disabled": true
												},
												{
													"key": "range",
													"value": "dsqdsqdsqdsq",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "monitorings - Wrong data : endDateTo",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"endDateTo\", false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dataAPIBaseUrl}}/monitorings?endDateTo=2021-13-67",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"monitorings"
											],
											"query": [
												{
													"key": "companyId",
													"value": "officia sint in",
													"description": "Monitoring identifier",
													"disabled": true
												},
												{
													"key": "assessmentSlugs",
													"value": "test",
													"disabled": true
												},
												{
													"key": "startDateFrom",
													"value": "",
													"disabled": true
												},
												{
													"key": "startDateTo",
													"value": "",
													"disabled": true
												},
												{
													"key": "endDateFrom",
													"value": "",
													"disabled": true
												},
												{
													"key": "endDateTo",
													"value": "2021-13-67"
												},
												{
													"key": "countryCode",
													"value": "",
													"disabled": true
												},
												{
													"key": "naceCode",
													"value": "",
													"disabled": true
												},
												{
													"key": "range",
													"value": "dsqdsqdsqdsq",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "monitorings - Wrong interval : startDate",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    if (mustControlResult(pm, \"ICON-5232\")) {\r",
													"        checkResponse(pm, 400, \"startDateTo\", false);\r",
													"    }\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dataAPIBaseUrl}}/monitorings?startDateFrom=2021-12-10&startDateTo=2021-12-01",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"monitorings"
											],
											"query": [
												{
													"key": "companyId",
													"value": "officia sint in",
													"description": "Monitoring identifier",
													"disabled": true
												},
												{
													"key": "assessmentSlugs",
													"value": "test",
													"disabled": true
												},
												{
													"key": "startDateFrom",
													"value": "2021-12-10"
												},
												{
													"key": "startDateTo",
													"value": "2021-12-01"
												},
												{
													"key": "endDateFrom",
													"value": "",
													"disabled": true
												},
												{
													"key": "endDateTo",
													"value": "",
													"disabled": true
												},
												{
													"key": "countryCode",
													"value": "",
													"disabled": true
												},
												{
													"key": "naceCode",
													"value": "",
													"disabled": true
												},
												{
													"key": "range",
													"value": "dsqdsqdsqdsq",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "monitorings - Wrong interval : endDate",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    if (mustControlResult(pm, \"ICON-5232\")) {\r",
													"        checkResponse(pm, 400, \"endDateTo\", false);\r",
													"    }\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dataAPIBaseUrl}}/monitorings?endDateFrom=2021-12-10&endDateTo=2021-12-01",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"monitorings"
											],
											"query": [
												{
													"key": "companyId",
													"value": "officia sint in",
													"description": "Monitoring identifier",
													"disabled": true
												},
												{
													"key": "assessmentSlugs",
													"value": "test",
													"disabled": true
												},
												{
													"key": "startDateFrom",
													"value": "",
													"disabled": true
												},
												{
													"key": "startDateTo",
													"value": "",
													"disabled": true
												},
												{
													"key": "endDateFrom",
													"value": "2021-12-10"
												},
												{
													"key": "endDateTo",
													"value": "2021-12-01"
												},
												{
													"key": "countryCode",
													"value": "",
													"disabled": true
												},
												{
													"key": "naceCode",
													"value": "",
													"disabled": true
												},
												{
													"key": "range",
													"value": "dsqdsqdsqdsq",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "monitorings - Wrong countryCode",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"countryCode\", false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dataAPIBaseUrl}}/monitorings?countryCode=FR8",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"monitorings"
											],
											"query": [
												{
													"key": "companyId",
													"value": "officia sint in",
													"description": "Monitoring identifier",
													"disabled": true
												},
												{
													"key": "assessmentSlugs",
													"value": "test",
													"disabled": true
												},
												{
													"key": "startDateFrom",
													"value": "",
													"disabled": true
												},
												{
													"key": "startDateTo",
													"value": "",
													"disabled": true
												},
												{
													"key": "endDateFrom",
													"value": "2021-12-10",
													"disabled": true
												},
												{
													"key": "endDateTo",
													"value": "2021-12-01",
													"disabled": true
												},
												{
													"key": "countryCode",
													"value": "FR8"
												},
												{
													"key": "naceCode",
													"value": "",
													"disabled": true
												},
												{
													"key": "range",
													"value": "dsqdsqdsqdsq",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "monitorings - Wrong naceCode",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"naceCode\", false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dataAPIBaseUrl}}/monitorings?naceCode=112",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"monitorings"
											],
											"query": [
												{
													"key": "companyId",
													"value": "officia sint in",
													"description": "Monitoring identifier",
													"disabled": true
												},
												{
													"key": "assessmentSlugs",
													"value": "test",
													"disabled": true
												},
												{
													"key": "startDateFrom",
													"value": "",
													"disabled": true
												},
												{
													"key": "startDateTo",
													"value": "",
													"disabled": true
												},
												{
													"key": "endDateFrom",
													"value": "2021-12-10",
													"disabled": true
												},
												{
													"key": "endDateTo",
													"value": "2021-12-01",
													"disabled": true
												},
												{
													"key": "countryCode",
													"value": "FR8",
													"disabled": true
												},
												{
													"key": "naceCode",
													"value": "112"
												},
												{
													"key": "range",
													"value": "dsqdsqdsqdsq",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "/:monitoringId",
							"item": [
								{
									"name": "monitorings - Invalid id",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 404, null, true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dataAPIBaseUrl}}/monitorings/ABCdB9a7-5Da4-f6CD-b70a-E3DF479f12",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"monitorings",
												"ABCdB9a7-5Da4-f6CD-b70a-E3DF479f12"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "POST",
							"item": [
								{
									"name": "monitorings/orders - No body",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"body\", true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dataAPIBaseUrl}}/monitorings/orders",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"monitorings",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "monitorings/orders - Empty body",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"startDate\", false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dataAPIBaseUrl}}/monitorings/orders",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"monitorings",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "monitorings/orders - Wrong pattern : startDate",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    if (mustControlResult(pm, \"ICON-5231\")) {\r",
													"        checkResponse(pm, 400, \"startDate\", false);\r",
													"    }\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"startDate\" : \"20211730\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dataAPIBaseUrl}}/monitorings/orders",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"monitorings",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "monitorings/orders - Date in the past : startDate",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    if (mustControlResult(pm, \"ICON-5511\")) {\r",
													"        checkResponse(pm, 400, \"startDate\", false);\r",
													"    }\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"startDate\" : \"2017-10-30\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dataAPIBaseUrl}}/monitorings/orders",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"monitorings",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "monitorings/orders - Only date",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"assessments\", false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"startDate\" : \"2017-10-30\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dataAPIBaseUrl}}/monitorings/orders",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"monitorings",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "monitorings/orders - Empty assessment array",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"assessments\", false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"startDate\" : \"2022-10-30\",\r\n    \"assessments\": []\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dataAPIBaseUrl}}/monitorings/orders",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"monitorings",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "monitorings/orders - Empty assessment",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    if (mustControlResult(pm, \"ICON-5234\")) {\r",
													"        checkResponse(pm, 400, \"assessments\", false);\r",
													"    }\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"startDate\" : \"2022-10-30\",\r\n    \"assessments\": [{ \"slug\" :\"  \"}]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dataAPIBaseUrl}}/monitorings/orders",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"monitorings",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "monitorings/orders - Invalid assessment",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    if (mustControlResult(pm, \"ICON-5236\")) {\r",
													"        checkResponse(pm, 400, \"assessments\", false);\r",
													"    }\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"startDate\" : \"2022-10-30\",\r\n    \"assessments\": [{ \"slug\" :\"mySlug\"}]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dataAPIBaseUrl}}/monitorings/orders",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"monitorings",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "monitorings/orders - Invalid companyId",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"companyId\", false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"startDate\" : \"2022-10-30\",\r\n    \"companyId\": \"be0ac5d4-1272-395f-bb00-d8e1ef190b3ctessd\",\r\n    \"assessments\": [\r\n        {\r\n            \"slug\": \"debtor-risk-assessment\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dataAPIBaseUrl}}/monitorings/orders",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"monitorings",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "monitorings/orders - Invalid companyIdentificationId",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"companyIdentificationId\", false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"startDate\" : \"2022-10-30\",\r\n    \"companyIdentificationId\": \"be0ac5d4-1272-395f-bb00-d8e1ef190b3ctessd\",\r\n    \"assessments\": [\r\n        {\r\n            \"slug\": \"debtor-risk-assessment\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dataAPIBaseUrl}}/monitorings/orders",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"monitorings",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "monitorings/orders - ExternalId Missing slug",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    if (mustControlResult(pm, \"ICON-5236\")) {\r",
													"        checkResponse(pm, 400, \"externalId\", false);\r",
													"    }\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"startDate\" : \"2022-10-30\",\r\n    \"externalId\": \"be0ac5d4-1272-395f-bb00-d8e1ef190b3ctessd\",\r\n    \"assessments\": [\r\n        {\r\n            \"slug\": \"debtor-risk-assessment\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dataAPIBaseUrl}}/monitorings/orders",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"monitorings",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "monitorings/orders - ExternalId Missing countryCode",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"countryCode\", false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"startDate\" : \"2022-10-30\",\r\n    \"externalId\": \"VAT#123\",\r\n    \"assessments\": [\r\n        {\r\n            \"slug\": \"debtor-risk-assessment\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dataAPIBaseUrl}}/monitorings/orders",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"monitorings",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "monitorings/orders - ExternalId Wrong countryCode",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"externalId\", false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"startDate\" : \"2022-10-30\",\r\n    \"externalId\": \"VAT#123\",\r\n    \"countryCode\":\"AT\",\r\n    \"assessments\": [\r\n        {\r\n            \"slug\": \"debtor-risk-assessment\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dataAPIBaseUrl}}/monitorings/orders",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"monitorings",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "monitorings/orders - CRA No countryCode",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"countryCode\", false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"startDate\" : \"2022-10-30\",\r\n    \"assessments\": [\r\n        {\r\n            \"slug\": \"country-risk-assessment\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dataAPIBaseUrl}}/monitorings/orders",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"monitorings",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "monitorings/orders - CRA Uncovered country",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"countryCode\", false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"startDate\" : \"2022-10-30\",\r\n    \"countryCode\": \"EN\",\r\n    \"assessments\": [\r\n        {\r\n            \"slug\": \"country-risk-assessment\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dataAPIBaseUrl}}/monitorings/orders",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"monitorings",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "monitorings/orders - CRA Covered country no slug",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    if (mustControlResult(pm, \"ICON-5237\")) {\r",
													"        checkResponse(pm, 400, \"countryCode\", false, \"Assessment 'country-risk-assessment' is not available in this country\");\r",
													"    }\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"startDate\" : \"2022-10-30\",\r\n    \"countryCode\": \"AE\",\r\n    \"assessments\": [\r\n        {\r\n            \"slug\": \"country-risk-assessment\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dataAPIBaseUrl}}/monitorings/orders",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"monitorings",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "monitorings/orders - SRA No countryCode",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 400, \"countryCode\", false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"startDate\" : \"2022-10-30\",\r\n    \"assessments\": [\r\n        {\r\n            \"naceCode\": \"PL\",\r\n            \"slug\": \"sector-risk-assessment\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dataAPIBaseUrl}}/monitorings/orders",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"monitorings",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "monitorings/orders - SRA No naceCode",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    pm.response.to.have.status(400);\r",
													"    var responseJson = pm.response.json();\r",
													"    pm.expect(responseJson.messages[0].code).to.eql(\"missing_or_invalid_param\");\r",
													"    pm.expect(responseJson.messages[0].docUrl).to.eql(pm.collectionVariables.get(\"docUrl\"))\r",
													"    pm.expect(responseJson.messages[0].message).to.eql(\"Missing or invalid parameter for sector-risk-assessment: naceCode\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"startDate\" : \"2022-10-30\",\r\n    \"countryCode\": \"PL\",\r\n    \"assessments\": [\r\n        {\r\n            \"slug\": \"sector-risk-assessment\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dataAPIBaseUrl}}/monitorings/orders",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"monitorings",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "monitorings/orders - SRA Wrong naceCode",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    pm.response.to.have.status(400);\r",
													"    var responseJson = pm.response.json();\r",
													"    pm.expect(responseJson.messages[0].code).to.eql(\"missing_or_invalid_param\");\r",
													"    pm.expect(responseJson.messages[0].docUrl).to.eql(pm.collectionVariables.get(\"docUrl\"))\r",
													"    pm.expect(responseJson.messages[0].message).to.eql(\"Missing or invalid parameter for sector-risk-assessment: naceCode\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "FR",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"startDate\" : \"2022-10-30\",\r\n    \"countryCode\": \"PL\",\r\n    \"assessments\": [\r\n        {\r\n            \"naceCode\": \"naceCode\",\r\n            \"slug\": \"sector-risk-assessment\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dataAPIBaseUrl}}/monitorings/orders",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"monitorings",
												"orders"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "assessments",
			"item": [
				{
					"name": "assessments - No data",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(request.name, function () {\r",
									"    checkResponse(pm, 200, null, true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "{{idToken}}",
								"type": "text"
							},
							{
								"key": "x-api-key",
								"value": "{{dataAPIApiKey}}",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "PT",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{dataAPIBaseUrl}}/assessments?countryCode=ZW",
							"host": [
								"{{dataAPIBaseUrl}}"
							],
							"path": [
								"assessments"
							],
							"query": [
								{
									"key": "countryCode",
									"value": "ZW"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "assessments - PL Lang PL",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(request.name, function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(pm.response.json().length).to.eql(6);\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check description\", function () {\r",
									"    var assessments = pm.response.json();\r",
									"    pm.expect(assessments.length).to.eql(6);\r",
									"    pm.expect(assessments[0].descriptions[0].language, \"Description in language \" + assessments[0].descriptions[0].language).to.eql(\"pl\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "{{idToken}}",
								"type": "text"
							},
							{
								"key": "x-api-key",
								"value": "{{dataAPIApiKey}}",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "PL",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{dataAPIBaseUrl}}/assessments?countryCode=PL",
							"host": [
								"{{dataAPIBaseUrl}}"
							],
							"path": [
								"assessments"
							],
							"query": [
								{
									"key": "countryCode",
									"value": "PL"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "assessments - PL Default",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(request.name, function () {\r",
									"    var assessments = pm.response.json();\r",
									"    pm.expect(assessments.length).to.eql(6);\r",
									"    pm.expect(assessments[0].descriptions[0].language, \"Description in language \" + assessments[0].descriptions[0].language).to.eql(\"en\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "{{idToken}}",
								"type": "text"
							},
							{
								"key": "x-api-key",
								"value": "{{dataAPIApiKey}}",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "FR8",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{dataAPIBaseUrl}}/assessments?countryCode=PL",
							"host": [
								"{{dataAPIBaseUrl}}"
							],
							"path": [
								"assessments"
							],
							"query": [
								{
									"key": "countryCode",
									"value": "PL"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "companies",
			"item": [
				{
					"name": "identifications",
					"item": [
						{
							"name": "GET",
							"item": [
								{
									"name": "companies/identifications - No filter",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 200);\r",
													"    var responseJson = pm.response.json();\r",
													"    if (mustControlResult(pm, \"ICON-5227\")) {\r",
													"        checkPagination(pm, \"identification\", 20, responseJson.length, pm.request.url.query.get(\"range\"));\r",
													"    }\r",
													"    pm.collectionVariables.set(\"identificationId\", responseJson[1].id);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dataAPIBaseUrl}}/companies/identifications",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"companies",
												"identifications"
											]
										}
									},
									"response": []
								},
								{
									"name": "companies/identifications - With range",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 206);\r",
													"    if (mustControlResult(pm, \"ICON-5227\")) {\r",
													"        checkPagination(pm, \"identification\", 20, 2, pm.request.url.query.get(\"range\"));\r",
													"        var responseJson = pm.response.json();\r",
													"        pm.expect(responseJson.length).to.eql(2);\r",
													"        pm.expect(responseJson[0].id).to.eql(pm.collectionVariables.get(\"identificationId\"));\r",
													"    }\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dataAPIBaseUrl}}/companies/identifications?range=1-2",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"companies",
												"identifications"
											],
											"query": [
												{
													"key": "range",
													"value": "1-2"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "POST",
							"item": [
								{
									"name": "companies/identifications - With externalId",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 200);\r",
													"    var responseJson = pm.response.json();\r",
													"    pm.expect(responseJson.searchedCompany).to.eql(JSON.parse(request.data));\r",
													"    pm.expect(responseJson.status).to.eql(\"identified\");\r",
													"    pm.expect(responseJson.matchingCompanies.length).to.eql(1);\r",
													"    pm.expect(responseJson.matchingCompanies[0].id).to.eql(\"be0ac5d4-1272-395f-bb00-d8e1ef190b3c\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"address\": {\n        \"countryCode\": \"PL\"\n    },\n    \"externalIds\": [\n    {\n      \"id\": \"5423209690\",\n      \"repositorySlug\": \"vat-number\"\n    }]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dataAPIBaseUrl}}/companies/identifications",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"companies",
												"identifications"
											]
										}
									},
									"response": []
								},
								{
									"name": "companies/identifications - No match",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 200);\r",
													"    var responseJson = pm.response.json();\r",
													"    pm.expect(responseJson.searchedCompany).to.eql(JSON.parse(request.data));\r",
													"    pm.expect(responseJson.status).to.eql(\"initiated\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"TRIDOUCORP\",\n    \"address\": {\n        \"postalCode\": \"35770\",\n        \"city\": \"VERN\",\n        \"countryCode\": \"FR\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dataAPIBaseUrl}}/companies/identifications",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"companies",
												"identifications"
											]
										}
									},
									"response": []
								},
								{
									"name": "companies/identifications - One match",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 200);\r",
													"    var responseJson = pm.response.json();\r",
													"    pm.expect(responseJson.searchedCompany).to.eql(JSON.parse(request.data));\r",
													"    pm.expect(responseJson.status).to.eql(\"identified\");\r",
													"    pm.expect(responseJson.matchingCompanies.length).to.eql(1);\r",
													"    pm.expect(responseJson.matchingCompanies[0].name).to.eql(\"Praktyka Stomatologiczna Karol\");\r",
													"    pm.expect(responseJson.matchingCompanies[0].id).to.eql(\"4436aef5-4d59-3c4a-ada3-0526f3244a54\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Praktyka Stomatologiczna Karol\",\n    \"address\": {\n        \"postalCode\": \"25-015\",\n        \"city\": \"Warszawa\",\n        \"countryCode\": \"PL\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dataAPIBaseUrl}}/companies/identifications",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"companies",
												"identifications"
											]
										}
									},
									"response": []
								},
								{
									"name": "companies/identifications - Multiple matches",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(request.name, function () {\r",
													"    checkResponse(pm, 200);\r",
													"    var responseJson = pm.response.json();\r",
													"    pm.expect(responseJson.searchedCompany).to.eql(JSON.parse(request.data));\r",
													"    pm.expect(responseJson.status).to.eql(\"multiple-matches\");\r",
													"    pm.expect(responseJson.matchingCompanies.length).to.eql(2);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "authorization",
												"value": "{{idToken}}",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "{{dataAPIApiKey}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"STOW\",\n    \"address\": {\n        \"postalCode\": \"02-127\",\n        \"city\": \"Warszawa\",\n        \"countryCode\": \"PL\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dataAPIBaseUrl}}/companies/identifications",
											"host": [
												"{{dataAPIBaseUrl}}"
											],
											"path": [
												"companies",
												"identifications"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "repositories",
					"item": [
						{
							"name": "repositories - PL",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(request.name, function () {\r",
											"    checkResponse(pm, 200);\r",
											"    var responseJson = pm.response.json();\r",
											"    pm.expect(responseJson.length).to.eql(6);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "{{idToken}}",
										"type": "text"
									},
									{
										"key": "x-api-key",
										"value": "{{dataAPIApiKey}}",
										"type": "text"
									},
									{
										"key": "Accept-Language",
										"value": "FR",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{dataAPIBaseUrl}}/company-v1/companies/repositories?countryCode=PL",
									"host": [
										"{{dataAPIBaseUrl}}"
									],
									"path": [
										"company-v1",
										"companies",
										"repositories"
									],
									"query": [
										{
											"key": "countryCode",
											"value": "PL",
											"description": "(Required) Country code (ISO 3166 Alpha-2)"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "financials",
					"item": [
						{
							"name": "companies/financials - Search by companyId",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(request.name, function () {\r",
											"    checkResponse(pm, 200);\r",
											"    var responseJson = pm.response.json();\r",
											"    pm.expect(responseJson.length).to.eql(1);\r",
											"    pm.expect(responseJson[0].id).to.eql(pm.request.url.query.get(\"companyId\"));\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "{{idToken}}",
										"type": "text"
									},
									{
										"key": "x-api-key",
										"value": "{{dataAPIApiKey}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{dataAPIBaseUrl}}/companies/financials?companyId=5c9125d7-e815-320f-aee1-d8778f4c1532",
									"host": [
										"{{dataAPIBaseUrl}}"
									],
									"path": [
										"companies",
										"financials"
									],
									"query": [
										{
											"key": "companyId",
											"value": "5c9125d7-e815-320f-aee1-d8778f4c1532"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "companies/financials - Search by companyId Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(request.name, function () {\r",
											"    checkResponse(pm, 200);\r",
											"    var responseJson = pm.response.json();\r",
											"    pm.expect(responseJson.length).to.eql(1);\r",
											"    pm.expect(responseJson[0].id).to.eql(pm.request.url.query.get(\"companyId\"));\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "{{idToken}}",
										"type": "text"
									},
									{
										"key": "x-api-key",
										"value": "{{dataAPIApiKey}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{dataAPIBaseUrl}}/companies/financials?companyId=5c9125d7-e815-320f-aee1-d8778f4c1532",
									"host": [
										"{{dataAPIBaseUrl}}"
									],
									"path": [
										"companies",
										"financials"
									],
									"query": [
										{
											"key": "companyId",
											"value": "5c9125d7-e815-320f-aee1-d8778f4c1532"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "companies/financials - Search by companyId No data",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(request.name, function () {\r",
											"    checkResponse(pm, 200, null, true);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "{{idToken}}",
										"type": "text"
									},
									{
										"key": "x-api-key",
										"value": "{{dataAPIApiKey}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{dataAPIBaseUrl}}/companies/financials?companyId={{companyId}}",
									"host": [
										"{{dataAPIBaseUrl}}"
									],
									"path": [
										"companies",
										"financials"
									],
									"query": [
										{
											"key": "externalId",
											"value": "officia sint in",
											"description": "External identifier under the following format {repository}#{id}",
											"disabled": true
										},
										{
											"key": "companyName",
											"value": "coca",
											"description": "Company name",
											"disabled": true
										},
										{
											"key": "postalCode",
											"value": "officia sint in",
											"description": "Postal code, ZIP Code",
											"disabled": true
										},
										{
											"key": "city",
											"value": "officia sint in",
											"description": "City",
											"disabled": true
										},
										{
											"key": "state",
											"value": "officia sint in",
											"description": "State",
											"disabled": true
										},
										{
											"key": "countryCode",
											"value": "AT",
											"description": "Country code (ISO 3166 Alpha-2)",
											"disabled": true
										},
										{
											"key": "range",
											"value": "10-25",
											"description": "Pagination interval\n\nEx: Resources from an index to another included one (from 10 to 25 => ?range = 10-25).",
											"disabled": true
										},
										{
											"key": "companyId",
											"value": "{{companyId}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "companies - Search by companyId",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(request.name, function () {\r",
									"    checkResponse(pm, 200);\r",
									"    var responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.length).to.eql(1);\r",
									"    pm.expect(responseJson[0].id).to.eql(pm.request.url.query.get(\"companyId\"));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "{{idToken}}",
								"type": "text"
							},
							{
								"key": "x-api-key",
								"value": "{{dataAPIApiKey}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{dataAPIBaseUrl}}/companies?companyId={{companyId}}",
							"host": [
								"{{dataAPIBaseUrl}}"
							],
							"path": [
								"companies"
							],
							"query": [
								{
									"key": "externalId",
									"value": "officia sint in",
									"description": "External identifier under the following format {repository}#{id}",
									"disabled": true
								},
								{
									"key": "companyName",
									"value": "coca",
									"description": "Company name",
									"disabled": true
								},
								{
									"key": "postalCode",
									"value": "officia sint in",
									"description": "Postal code, ZIP Code",
									"disabled": true
								},
								{
									"key": "city",
									"value": "officia sint in",
									"description": "City",
									"disabled": true
								},
								{
									"key": "state",
									"value": "officia sint in",
									"description": "State",
									"disabled": true
								},
								{
									"key": "countryCode",
									"value": "AT",
									"description": "Country code (ISO 3166 Alpha-2)",
									"disabled": true
								},
								{
									"key": "range",
									"value": "10-25",
									"description": "Pagination interval\n\nEx: Resources from an index to another included one (from 10 to 25 => ?range = 10-25).",
									"disabled": true
								},
								{
									"key": "companyId",
									"value": "{{companyId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "companies - Search by externalId",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.request.url += \"externalId=\" + pm.collectionVariables.get(\"externalId\").replace(\"#\",\"%23\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(request.name, function () {\r",
									"    checkResponse(pm, 200);\r",
									"    var responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.length).to.eql(1);\r",
									"    pm.expect(responseJson[0].id).to.eql(\"397fb600-414c-3a55-a41a-d66bb6cfb36c\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "{{idToken}}",
								"type": "text"
							},
							{
								"key": "x-api-key",
								"value": "{{dataAPIApiKey}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{dataAPIBaseUrl}}/company-v1/companies?countryCode={{externalIdCountryCode}}&=",
							"host": [
								"{{dataAPIBaseUrl}}"
							],
							"path": [
								"company-v1",
								"companies"
							],
							"query": [
								{
									"key": "companyId",
									"value": "397fb600-414c-3a55-a41a-d66bb6cfb36c",
									"description": "Company identifier",
									"disabled": true
								},
								{
									"key": "companyName",
									"value": "coca",
									"description": "Company name",
									"disabled": true
								},
								{
									"key": "postalCode",
									"value": "officia sint in",
									"description": "Postal code, ZIP Code",
									"disabled": true
								},
								{
									"key": "city",
									"value": "officia sint in",
									"description": "City",
									"disabled": true
								},
								{
									"key": "state",
									"value": "officia sint in",
									"description": "State",
									"disabled": true
								},
								{
									"key": "countryCode",
									"value": "{{externalIdCountryCode}}",
									"description": "Country code (ISO 3166 Alpha-2)"
								},
								{
									"key": "range",
									"value": "10-25",
									"description": "Pagination interval\n\nEx: Resources from an index to another included one (from 10 to 25 => ?range = 10-25).",
									"disabled": true
								},
								{
									"key": "",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "companies - Search by companyInfo",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(request.name, function () {\r",
									"    checkResponse(pm, 200);\r",
									"    var responseJson = pm.response.json();\r",
									"//    pm.expect(responseJson.length).to.eql(1);\r",
									"    pm.expect(responseJson[0].name).to.eql(\"PRZEDSIĘBIORSTWO BUDOWLANE POMORSKI Sp. z o.o.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "{{idToken}}",
								"type": "text"
							},
							{
								"key": "x-api-key",
								"value": "{{dataAPIApiKey}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{dataAPIBaseUrl}}/company-v1/companies?companyName=HACK-Hack Ralf&postalCode=70-552&city=Szczecin&countryCode=PL",
							"host": [
								"{{dataAPIBaseUrl}}"
							],
							"path": [
								"company-v1",
								"companies"
							],
							"query": [
								{
									"key": "companyId",
									"value": "397fb600-414c-3a55-a41a-d66bb6cfb36c",
									"description": "Company identifier",
									"disabled": true
								},
								{
									"key": "companyName",
									"value": "HACK-Hack Ralf",
									"description": "Company name"
								},
								{
									"key": "postalCode",
									"value": "70-552",
									"description": "Postal code, ZIP Code"
								},
								{
									"key": "city",
									"value": "Szczecin",
									"description": "City"
								},
								{
									"key": "countryCode",
									"value": "PL",
									"description": "Country code (ISO 3166 Alpha-2)"
								},
								{
									"key": "range",
									"value": "10-25",
									"description": "Pagination interval\n\nEx: Resources from an index to another included one (from 10 to 25 => ?range = 10-25).",
									"disabled": true
								},
								{
									"key": "externalId",
									"value": "statistic-number%23810684000",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "countries",
			"item": [
				{
					"name": "/:countryCode",
					"item": [
						{
							"name": "countries - FR Accept-Language PL",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(request.name, function () {\r",
											"    checkResponse(pm, 200);\r",
											"    var responseJson = pm.response.json();\r",
											"    pm.expect(responseJson.code).to.eql(\"FR\");\r",
											"    pm.expect(responseJson.descriptions[0].language).to.eql(\"pl\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "{{idToken}}",
										"type": "text"
									},
									{
										"key": "x-api-key",
										"value": "{{dataAPIApiKey}}",
										"type": "text"
									},
									{
										"key": "Accept-Language",
										"value": "PL",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{dataAPIBaseUrl}}/countries/FR",
									"host": [
										"{{dataAPIBaseUrl}}"
									],
									"path": [
										"countries",
										"FR"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "countries - Accept-Language FR",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(request.name, function () {\r",
									"    checkResponse(pm, 200);\r",
									"    var responseJson = pm.response.json();\r",
									"    if (mustControlResult(pm, \"ICON-5512\")) {\r",
									"        pm.expect(responseJson.length).to.eql(251);\r",
									"    }\r",
									"    pm.expect(responseJson[0].descriptions[0].language).to.eql(\"fr\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "{{idToken}}",
								"type": "text"
							},
							{
								"key": "x-api-key",
								"value": "{{dataAPIApiKey}}",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "FR",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{dataAPIBaseUrl}}/countries",
							"host": [
								"{{dataAPIBaseUrl}}"
							],
							"path": [
								"countries"
							]
						}
					},
					"response": []
				},
				{
					"name": "countries - Accept-Language EN",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(request.name, function () {\r",
									"    checkResponse(pm, 200);\r",
									"    var responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.length).to.eql(251);\r",
									"    pm.expect(responseJson[0].descriptions[0].language).to.eql(\"en\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "{{idToken}}",
								"type": "text"
							},
							{
								"key": "x-api-key",
								"value": "{{dataAPIApiKey}}",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "EN",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{dataAPIBaseUrl}}/countries",
							"host": [
								"{{dataAPIBaseUrl}}"
							],
							"path": [
								"countries"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "monitorings",
			"item": [
				{
					"name": "POST",
					"item": [
						{
							"name": "monitorings -  No company slug",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.collectionVariables.set(\"startDate\", moment().add(7, 'd').format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"\r",
											"pm.test(request.name, function () {\r",
											"    var startDate = JSON.parse(request.data).startDate;\r",
											"    var endDate = moment(startDate).add(1, 'Y').format(\"YYYY-MM-DD\");\r",
											"\r",
											"    var responseJson = pm.response.json();\r",
											"    pm.expect(responseJson.orderDate).to.include(moment().format(\"YYYY-MM-DD\"));\r",
											"    pm.expect(responseJson.monitorings.length).to.eql(3);\r",
											"\r",
											"    checkMonitoring(pm, responseJson.monitorings[0], 0, startDate, endDate);\r",
											"    checkMonitoring(pm, responseJson.monitorings[1], 1, startDate, endDate);\r",
											"    checkMonitoring(pm, responseJson.monitorings[2], 2, startDate, endDate);\r",
											"\r",
											"    pm.collectionVariables.set(\"newMonitoringId\", responseJson.monitorings[0].id);\r",
											"});\r",
											"\r",
											"function checkMonitoring(pm, monitoring, index, startDate, endDate) {\r",
											"    pm.expect(monitoring.id).to.eql(monitoring.initialDeliveryId);\r",
											"    pm.expect(monitoring.startDate).to.eql(startDate);\r",
											"    pm.expect(monitoring.endDate).to.eql(endDate);\r",
											"    pm.expect(monitoring.countryCode).to.eql(pm.collectionVariables.get(\"countryCode\"));\r",
											"    if (index > 0) {\r",
											"        pm.expect(monitoring.assessmentSlug).to.eql(\"sector-risk-assessment\");\r",
											"        pm.expect(monitoring.naceCode).to.eql(pm.collectionVariables.get(\"naceCode\" + index));\r",
											"    } else {\r",
											"        pm.expect(monitoring.assessmentSlug).to.eql(\"country-risk-assessment\");\r",
											"    }\r",
											"    pm.expect(monitoring.status).to.eql(\"in-preparation\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "authorization",
										"value": "{{idToken}}",
										"type": "text"
									},
									{
										"key": "x-api-key",
										"value": "{{dataAPIApiKey}}",
										"type": "text"
									},
									{
										"key": "Accept-Language",
										"value": "FR",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"countryCode\": \"{{countryCode}}\",\r\n    \"startDate\" : \"{{startDate}}\",\r\n    \"callbackUrl\": \"https://webhook.site/7b0d250c-6e7e-4823-94ed-4a6fc00fc79b\",\r\n    \"assessments\": [\r\n        {\r\n            \"slug\": \"country-risk-assessment\"\r\n        },{\r\n            \"naceCode\" : \"{{naceCode1}}\",\r\n            \"slug\": \"sector-risk-assessment\"\r\n        },{\r\n            \"naceCode\" : \"{{naceCode2}}\",\r\n            \"slug\": \"sector-risk-assessment\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{dataAPIBaseUrl}}/monitorings/orders",
									"host": [
										"{{dataAPIBaseUrl}}"
									],
									"path": [
										"monitorings",
										"orders"
									]
								}
							},
							"response": []
						},
						{
							"name": "monitorings -  Company slug with companyId",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.collectionVariables.set(\"startDate\", moment().add(7, 'd').format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"\r",
											"pm.test(request.name, function () {\r",
											"    var startDate = JSON.parse(request.data).startDate;\r",
											"    var endDate = moment(startDate).add(1, 'Y').format(\"YYYY-MM-DD\");\r",
											"\r",
											"    var responseJson = pm.response.json();\r",
											"    pm.expect(responseJson.orderDate).to.include(moment().format(\"YYYY-MM-DD\"));\r",
											"    pm.expect(responseJson.monitorings.length).to.eql(3);\r",
											"\r",
											"    checkMonitoring(pm, responseJson.monitorings[0], 0, startDate, endDate);\r",
											"    checkMonitoring(pm, responseJson.monitorings[1], 1, startDate, endDate);\r",
											"    checkMonitoring(pm, responseJson.monitorings[2], 2, startDate, endDate);\r",
											"\r",
											"    pm.collectionVariables.set(\"newMonitoringId\", responseJson.monitorings[0].id);\r",
											"});\r",
											"\r",
											"function checkMonitoring(pm, monitoring, index, startDate, endDate) {\r",
											"    pm.expect(monitoring.id).to.eql(monitoring.initialDeliveryId);\r",
											"    pm.expect(monitoring.companyId).to.eql(pm.collectionVariables.get(\"companyId\"));\r",
											"    pm.expect(monitoring.startDate).to.eql(startDate);\r",
											"    pm.expect(monitoring.endDate).to.eql(endDate);\r",
											"    pm.expect(monitoring.countryCode).to.eql(undefined);\r",
											"    pm.expect(monitoring.naceCode).to.eql(undefined);\r",
											"    if (index == 0) {\r",
											"        pm.expect(monitoring.assessmentSlug).to.eql(\"debtor-risk-assessment\");\r",
											"        pm.expect(monitoring.currency).to.eql(undefined);\r",
											"    } else if (index == 1) {\r",
											"        pm.expect(monitoring.assessmentSlug).to.eql(\"debtor-risk-assessment-package\");\r",
											"        pm.expect(monitoring.currency).to.eql(undefined);\r",
											"    } else if (index == 2) {\r",
											"        pm.expect(monitoring.assessmentSlug).to.eql(\"credit-opinion\");\r",
											"       // pm.expect(monitoring.currency).to.eql(\"EUR\");\r",
											"    }\r",
											"    pm.expect(monitoring.status).to.eql(\"in-preparation\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "authorization",
										"value": "{{idToken}}",
										"type": "text"
									},
									{
										"key": "x-api-key",
										"value": "{{dataAPIApiKey}}",
										"type": "text"
									},
									{
										"key": "Accept-Language",
										"value": "EN",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"companyId\": \"{{companyId}}\",\r\n    \"startDate\" : \"{{startDate}}\",\r\n    \"callbackUrl\": \"https://webhook.site/7b0d250c-6e7e-4823-94ed-4a6fc00fc79b\",\r\n    \"assessments\": [\r\n        {\r\n            \"slug\": \"debtor-risk-assessment\"\r\n        },\r\n        {\r\n            \"slug\": \"debtor-risk-assessment-package\"\r\n        },\r\n        {\r\n            \"currency\" : \"EUR\",\r\n            \"slug\": \"credit-opinion\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{dataAPIBaseUrl}}/monitorings/orders",
									"host": [
										"{{dataAPIBaseUrl}}"
									],
									"path": [
										"monitorings",
										"orders"
									]
								}
							},
							"response": []
						},
						{
							"name": "monitorings -  Company slug with externalId",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.collectionVariables.set(\"startDate\", moment().add(7, 'd').format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"\r",
											"pm.test(request.name, function () {\r",
											"    var startDate = JSON.parse(request.data).startDate;\r",
											"    var endDate = moment(startDate).add(1, 'Y').format(\"YYYY-MM-DD\");\r",
											"\r",
											"    var responseJson = pm.response.json();\r",
											"    pm.expect(responseJson.orderDate).to.include(moment().format(\"YYYY-MM-DD\"));\r",
											"    pm.expect(responseJson.monitorings.length).to.eql(3);\r",
											"\r",
											"    checkMonitoring(pm, responseJson.monitorings[0], 0, startDate, endDate);\r",
											"    checkMonitoring(pm, responseJson.monitorings[1], 1, startDate, endDate);\r",
											"    checkMonitoring(pm, responseJson.monitorings[2], 2, startDate, endDate);\r",
											"\r",
											"    pm.collectionVariables.set(\"newMonitoringId\", responseJson.monitorings[0].id);\r",
											"});\r",
											"\r",
											"function checkMonitoring(pm, monitoring, index, startDate, endDate) {\r",
											"    pm.expect(monitoring.id).to.eql(monitoring.initialDeliveryId);\r",
											"    pm.expect(monitoring.companyId).to.eql(pm.collectionVariables.get(\"externalIdCompanyId\"));\r",
											"    pm.expect(monitoring.startDate).to.eql(startDate);\r",
											"    pm.expect(monitoring.endDate).to.eql(endDate);\r",
											"    pm.expect(monitoring.countryCode).to.eql(pm.collectionVariables.get(\"externalIdCountryCode\"));\r",
											"    pm.expect(monitoring.naceCode).to.eql(undefined);\r",
											"    if (index == 0) {\r",
											"        pm.expect(monitoring.assessmentSlug).to.eql(\"debtor-risk-assessment\");\r",
											"        pm.expect(monitoring.currency).to.eql(undefined);\r",
											"    } else if (index == 1) {\r",
											"        pm.expect(monitoring.assessmentSlug).to.eql(\"debtor-risk-assessment-package\");\r",
											"        pm.expect(monitoring.currency).to.eql(undefined);\r",
											"    } else if (index == 2) {\r",
											"        pm.expect(monitoring.assessmentSlug).to.eql(\"advanced-opinion\");\r",
											"       // pm.expect(monitoring.currency).to.eql(\"EUR\");\r",
											"    }\r",
											"    pm.expect(monitoring.status).to.eql(\"in-preparation\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "authorization",
										"value": "{{idToken}}",
										"type": "text"
									},
									{
										"key": "x-api-key",
										"value": "{{dataAPIApiKey}}",
										"type": "text"
									},
									{
										"key": "Accept-Language",
										"value": "EN",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"externalId\": \"{{externalId}}\",\r\n    \"countryCode\": \"{{externalIdCountryCode}}\",\r\n    \"startDate\" : \"{{startDate}}\",\r\n    \"assessments\": [\r\n        {\r\n            \"slug\": \"debtor-risk-assessment\"\r\n        },\r\n        {\r\n            \"slug\": \"debtor-risk-assessment-package\"\r\n        },\r\n        {\r\n            \"currency\" : \"EUR\",\r\n            \"slug\": \"advanced-opinion\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{dataAPIBaseUrl}}/monitorings/orders",
									"host": [
										"{{dataAPIBaseUrl}}"
									],
									"path": [
										"monitorings",
										"orders"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "GET",
					"item": [
						{
							"name": "monitorings - No filter",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (mustControlResult(pm, \"ICON-5227\")) {\r",
											"    checkPagination(pm, \"monitoring\", 20);\r",
											"}\r",
											"\r",
											"pm.test(\"monitorings - Preparation for filter test\", function () {\r",
											"    var responseJson = pm.response.json();\r",
											"    var sraMonitoring = responseJson.filter(element => element.assessmentSlug == \"sector-risk-assessment\");\r",
											"    pm.expect(sraMonitoring.length).to.above(2);\r",
											"    pm.collectionVariables.set(\"monitoringId\", sraMonitoring[0].id);\r",
											"    pm.collectionVariables.set(\"monitoring\", sraMonitoring[0]);\r",
											"\r",
											"    var companyMonitoring = responseJson.filter(element => element.assessmentSlug == \"debtor-risk-assessment\");\r",
											"    pm.expect(companyMonitoring.length).to.above(2);\r",
											"    pm.collectionVariables.set(\"companyId\", companyMonitoring[0].companyId);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "{{idToken}}",
										"type": "text"
									},
									{
										"key": "x-api-key",
										"value": "{{dataAPIApiKey}}",
										"type": "text"
									},
									{
										"key": "Accept-Language",
										"value": "FR",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{dataAPIBaseUrl}}/monitorings",
									"host": [
										"{{dataAPIBaseUrl}}"
									],
									"path": [
										"monitorings"
									]
								}
							},
							"response": []
						},
						{
							"name": "monitorings - No filter Range",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (mustControlResult(pm, \"ICON-5227\")) {\r",
											"    checkPagination(pm, \"monitoring\", 20, 4, pm.request.url.query.get(\"range\"));\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "{{idToken}}",
										"type": "text"
									},
									{
										"key": "x-api-key",
										"value": "{{dataAPIApiKey}}",
										"type": "text"
									},
									{
										"key": "Accept-Language",
										"value": "FR",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{dataAPIBaseUrl}}/monitorings?range=1-4",
									"host": [
										"{{dataAPIBaseUrl}}"
									],
									"path": [
										"monitorings"
									],
									"query": [
										{
											"key": "range",
											"value": "1-4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "monitorings - Filter on slug",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(request.name, function () {\r",
											"    var responseJson = pm.response.json();\r",
											"    var sraMonitoring = responseJson.filter(element => element.assessmentSlug == \"sector-risk-assessment\");\r",
											"    pm.expect(sraMonitoring.length).to.eql(responseJson.length);\r",
											"    pm.expect(sraMonitoring[0]).to.eql(pm.collectionVariables.get(\"monitoring\"));\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "{{idToken}}",
										"type": "text"
									},
									{
										"key": "x-api-key",
										"value": "{{dataAPIApiKey}}",
										"type": "text"
									},
									{
										"key": "Accept-Language",
										"value": "FR",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{dataAPIBaseUrl}}/monitorings?assessmentSlugs=sector-risk-assessment",
									"host": [
										"{{dataAPIBaseUrl}}"
									],
									"path": [
										"monitorings"
									],
									"query": [
										{
											"key": "assessmentSlugs",
											"value": "sector-risk-assessment"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "monitorings - Filter on start date",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.request.url += \"?startDateFrom=\" + pm.collectionVariables.get(\"monitoring\").startDate + \"&startDateTo=\" + pm.collectionVariables.get(\"monitoring\").startDate;"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(request.name, function () {\r",
											"    var responseJson = pm.response.json();\r",
											"    var monitoring = responseJson.filter(element => element.startDate == pm.collectionVariables.get(\"monitoring\").startDate);\r",
											"    pm.expect(monitoring.length).to.eql(responseJson.length);\r",
											"    monitoring = responseJson.filter(element => element.id == pm.collectionVariables.get(\"monitoring\").id);\r",
											"    pm.expect(monitoring.length).to.eql(1);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "{{idToken}}",
										"type": "text"
									},
									{
										"key": "x-api-key",
										"value": "{{dataAPIApiKey}}",
										"type": "text"
									},
									{
										"key": "Accept-Language",
										"value": "FR",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{dataAPIBaseUrl}}/monitorings",
									"host": [
										"{{dataAPIBaseUrl}}"
									],
									"path": [
										"monitorings"
									]
								}
							},
							"response": []
						},
						{
							"name": "monitorings - Filter on end date",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.request.url += \"?endDateFrom=\" + pm.collectionVariables.get(\"monitoring\").endDate + \"&endDateTo=\" + pm.collectionVariables.get(\"monitoring\").endDate;"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(request.name, function () {\r",
											"    var responseJson = pm.response.json();\r",
											"    var monitoring = responseJson.filter(element => element.endDate == pm.collectionVariables.get(\"monitoring\").endDate);\r",
											"    pm.expect(monitoring.length).to.eql(responseJson.length);\r",
											"    monitoring = responseJson.filter(element => element.id == pm.collectionVariables.get(\"monitoring\").id);\r",
											"    pm.expect(monitoring.length).to.eql(1);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "{{idToken}}",
										"type": "text"
									},
									{
										"key": "x-api-key",
										"value": "{{dataAPIApiKey}}",
										"type": "text"
									},
									{
										"key": "Accept-Language",
										"value": "FR",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{dataAPIBaseUrl}}/monitorings",
									"host": [
										"{{dataAPIBaseUrl}}"
									],
									"path": [
										"monitorings"
									]
								}
							},
							"response": []
						},
						{
							"name": "monitorings - Filter on countryCode",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.request.url += \"?countryCode=\" + pm.collectionVariables.get(\"monitoring\").countryCode;"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(request.name, function () {\r",
											"    var responseJson = pm.response.json();\r",
											"    var monitoring = responseJson.filter(element => element.countryCode == pm.collectionVariables.get(\"monitoring\").countryCode);\r",
											"    pm.expect(monitoring.length).to.eql(responseJson.length);\r",
											"    monitoring = responseJson.filter(element => element.assessmentSlug == \"sector-risk-assessment\" || element.assessmentSlug == \"country-risk-assessment\");\r",
											"    pm.expect(monitoring.length).to.eql(responseJson.length);\r",
											"    if (mustControlResult(pm, \"ICON-4600\")) {\r",
											"        monitoring = responseJson.filter(element => element.id == pm.collectionVariables.get(\"monitoring\").id);\r",
											"        pm.expect(monitoring.length).to.eql(1);\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "{{idToken}}",
										"type": "text"
									},
									{
										"key": "x-api-key",
										"value": "{{dataAPIApiKey}}",
										"type": "text"
									},
									{
										"key": "Accept-Language",
										"value": "FR",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{dataAPIBaseUrl}}/monitorings",
									"host": [
										"{{dataAPIBaseUrl}}"
									],
									"path": [
										"monitorings"
									]
								}
							},
							"response": []
						},
						{
							"name": "monitorings - Filter on naceCode",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.request.url += \"?naceCode=\" + pm.collectionVariables.get(\"monitoring\").naceCode;"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(request.name, function () {\r",
											"    var responseJson = pm.response.json();\r",
											"    var sraMonitoring = responseJson.filter(element => element.assessmentSlug == \"sector-risk-assessment\");\r",
											"    pm.expect(sraMonitoring.length).to.eql(responseJson.length);\r",
											"    if (mustControlResult(pm, \"ICON-4600\")) {\r",
											"        monitoring = responseJson.filter(element => element.id == pm.collectionVariables.get(\"monitoring\").id);\r",
											"        pm.expect(monitoring.length).to.eql(1);\r",
											"        pm.expect(monitoring[0]).to.eql(pm.collectionVariables.get(\"monitoring\"));\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "{{idToken}}",
										"type": "text"
									},
									{
										"key": "x-api-key",
										"value": "{{dataAPIApiKey}}",
										"type": "text"
									},
									{
										"key": "Accept-Language",
										"value": "FR",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{dataAPIBaseUrl}}/monitorings",
									"host": [
										"{{dataAPIBaseUrl}}"
									],
									"path": [
										"monitorings"
									],
									"query": [
										{
											"key": "assessmentSlugs",
											"value": "sector-risk-assessment",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "monitorings - Filter on companyId",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.request.url += \"?companyId=\" + pm.collectionVariables.get(\"companyId\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(request.name, function () {\r",
											"    var responseJson = pm.response.json();\r",
											"    var monitoring = responseJson.filter(element => element.companyId == pm.collectionVariables.get(\"companyId\"));\r",
											"    pm.expect(monitoring.length).to.eql(responseJson.length);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "{{idToken}}",
										"type": "text"
									},
									{
										"key": "x-api-key",
										"value": "{{dataAPIApiKey}}",
										"type": "text"
									},
									{
										"key": "Accept-Language",
										"value": "FR",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{dataAPIBaseUrl}}/monitorings",
									"host": [
										"{{dataAPIBaseUrl}}"
									],
									"path": [
										"monitorings"
									],
									"query": [
										{
											"key": "assessmentSlugs",
											"value": "sector-risk-assessment",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "/:monitoringId",
					"item": [
						{
							"name": "monitorings - Retrieve one",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.request.url += pm.collectionVariables.get(\"monitoringId\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(request.name, function () {\r",
											"    if (mustControlResult(pm, \"ICON-5513\")) {\r",
											"        pm.expect(pm.response.json()).to.eql(pm.collectionVariables.get(\"monitoring\"));\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "{{idToken}}",
										"type": "text"
									},
									{
										"key": "x-api-key",
										"value": "{{dataAPIApiKey}}",
										"type": "text"
									},
									{
										"key": "Accept-Language",
										"value": "FR",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{dataAPIBaseUrl}}/monitorings/",
									"host": [
										"{{dataAPIBaseUrl}}"
									],
									"path": [
										"monitorings",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "monitorings - Retrieve one just created",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.request.url += pm.collectionVariables.get(\"newMonitoringId\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(request.name, function () {\r",
											"    if (mustControlResult(pm, \"ICON-5513\")) {\r",
											"        pm.expect(pm.response.json()).to.eql(pm.collectionVariables.get(\"monitoring\"));\r",
											"        pm.expect(pm.response.json().status).to.eql(\"monitoring_active\");\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "{{idToken}}",
										"type": "text"
									},
									{
										"key": "x-api-key",
										"value": "{{dataAPIApiKey}}",
										"type": "text"
									},
									{
										"key": "Accept-Language",
										"value": "FR",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{dataAPIBaseUrl}}/monitorings/",
									"host": [
										"{{dataAPIBaseUrl}}"
									],
									"path": [
										"monitorings",
										""
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "notifications",
			"item": [
				{
					"name": "/:notificationId",
					"item": [
						{
							"name": "notifications - Retrieve one",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.request.url += pm.collectionVariables.get(\"notification\").id;"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(request.name, function () {\r",
											"    if (mustControlResult(pm, \"ICON-5513\")) {\r",
											"        pm.expect(pm.response.json()).to.eql(pm.collectionVariables.get(\"notification\"));\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "{{idToken}}",
										"type": "text"
									},
									{
										"key": "x-api-key",
										"value": "{{dataAPIApiKey}}",
										"type": "text"
									},
									{
										"key": "Accept-Language",
										"value": "EN",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{dataAPIBaseUrl}}/notifications/",
									"host": [
										"{{dataAPIBaseUrl}}"
									],
									"path": [
										"notifications",
										""
									],
									"query": [
										{
											"key": "deliveryDateFrom",
											"value": "2021-09-21",
											"description": "Date to get the notifications from",
											"disabled": true
										},
										{
											"key": "deliveryDateTo",
											"value": "2021-09-21",
											"description": "Date to get the notifications til",
											"disabled": true
										},
										{
											"key": "range",
											"value": "10-25",
											"description": "Pagination interval\n\nEx: Resources from an index to another included one (from 10 to 25 => ?range = 10-25).",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "notifications - No filter",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (mustControlResult(pm, \"ICON-5227\")) {\r",
									"    checkPagination(pm, \"notification\", 20);\r",
									"}\r",
									"pm.test(\"notifications - Preparation for filter test\", function () {\r",
									"    var responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.length).to.above(1);\r",
									"    pm.collectionVariables.set(\"notification\", responseJson[0]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "{{idToken}}",
								"type": "text"
							},
							{
								"key": "x-api-key",
								"value": "{{dataAPIApiKey}}",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "EN",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{dataAPIBaseUrl}}/notification-v1/notifications",
							"host": [
								"{{dataAPIBaseUrl}}"
							],
							"path": [
								"notification-v1",
								"notifications"
							],
							"query": [
								{
									"key": "deliveryDateFrom",
									"value": "2021-05-06",
									"description": "Date to get the notifications from",
									"disabled": true
								},
								{
									"key": "deliveryDateTo",
									"value": "2021-05-06",
									"description": "Date to get the notifications til",
									"disabled": true
								},
								{
									"key": "range",
									"value": "10-25",
									"description": "Pagination interval\n\nEx: Resources from an index to another included one (from 10 to 25 => ?range = 10-25).",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "notifications - No filter Range",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (mustControlResult(pm, \"ICON-5227\")) {\r",
									"    checkPagination(pm, \"notification\", 20, 3, pm.request.url.query.get(\"range\"));\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "{{idToken}}",
								"type": "text"
							},
							{
								"key": "x-api-key",
								"value": "{{dataAPIApiKey}}",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "EN",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{dataAPIBaseUrl}}/notification-v1/notifications?range=1-3",
							"host": [
								"{{dataAPIBaseUrl}}"
							],
							"path": [
								"notification-v1",
								"notifications"
							],
							"query": [
								{
									"key": "deliveryDateFrom",
									"value": "2021-05-06",
									"description": "Date to get the notifications from",
									"disabled": true
								},
								{
									"key": "deliveryDateTo",
									"value": "2021-05-06",
									"description": "Date to get the notifications til",
									"disabled": true
								},
								{
									"key": "range",
									"value": "1-3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "notifications - Filter on delivery date",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.request.url += \"?deliveryDateFrom=\" + pm.collectionVariables.get(\"notification\").deliveryDate + \"&deliveryDateTo=\" + pm.collectionVariables.get(\"notification\").deliveryDate;"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"checkPagination(pm, \"notification\", 100);\r",
									"\r",
									"pm.test(pm.name, function () {\r",
									"    var responseJson = pm.response.json();\r",
									"    var notification = responseJson.filter(element => element.deliveryDate == pm.collectionVariables.get(\"notification\").deliveryDate);\r",
									"    pm.expect(notification.length).to.eql(responseJson.length);\r",
									"    notification = responseJson.filter(element => element.id == pm.collectionVariables.get(\"notification\").id);\r",
									"    pm.expect(notification.length).to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "{{idToken}}",
								"type": "text"
							},
							{
								"key": "x-api-key",
								"value": "{{dataAPIApiKey}}",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "EN",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{dataAPIBaseUrl}}/notification-v1/notifications",
							"host": [
								"{{dataAPIBaseUrl}}"
							],
							"path": [
								"notification-v1",
								"notifications"
							],
							"query": [
								{
									"key": "deliveryDateFrom",
									"value": "2021-05-06",
									"description": "Date to get the notifications from",
									"disabled": true
								},
								{
									"key": "deliveryDateTo",
									"value": "2021-05-06",
									"description": "Date to get the notifications til",
									"disabled": true
								},
								{
									"key": "range",
									"value": "10-25",
									"description": "Pagination interval\n\nEx: Resources from an index to another included one (from 10 to 25 => ?range = 10-25).",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "publications",
			"item": [
				{
					"name": "POST",
					"item": [
						{
							"name": "publications -  No company slug",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"\r",
											"pm.test(request.name, function () {\r",
											"    var responseJson = pm.response.json();\r",
											"    pm.expect(responseJson.orderDate).to.include(moment().format(\"YYYY-MM-DD\"));\r",
											"    pm.expect(responseJson.status).to.eql(\"pending\");\r",
											"\r",
											"    pm.collectionVariables.set(\"newDeliveryId\", responseJson.publications[0].deliveryId);\r",
											"    if (mustControlResult(pm, \"ICON-5510\")) {\r",
											"        pm.expect(responseJson.publications.length).to.eql(3);\r",
											"\r",
											"        checkMonitoring(pm, responseJson.publications[0], 0);\r",
											"        checkMonitoring(pm, responseJson.publications[1], 1);\r",
											"        checkMonitoring(pm, responseJson.publications[2], 2);\r",
											"    }\r",
											"});\r",
											"\r",
											"function checkPublication(pm, publication, index) {\r",
											"    pm.expect(publication.href).to.eql(\"/publications/\" + publication.deliveryId);\r",
											"    if (index > 0) {\r",
											"        pm.expect(publication.assessmentSlug).to.eql(\"sector-risk-assessment\");\r",
											"    } else {\r",
											"        pm.expect(publication.assessmentSlug).to.eql(\"country-risk-assessment\");\r",
											"    }\r",
											"    pm.expect(publication.status).to.eql(\"in-preparation\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "authorization",
										"value": "{{idToken}}",
										"type": "text"
									},
									{
										"key": "x-api-key",
										"value": "{{dataAPIApiKey}}",
										"type": "text"
									},
									{
										"key": "Accept-Language",
										"value": "FR",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"assessments\": [\r\n         {\r\n            \"slug\": \"sector-risk-assessment\",\r\n            \"sectorCode\" : \"AUT\",\r\n            \"worldwide\" : true\r\n\r\n        }, {\r\n            \"slug\": \"sector-risk-assessment\",\r\n            \"naceCode\" : \"9001\"\r\n\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{dataAPIBaseUrl}}/publications/orders",
									"host": [
										"{{dataAPIBaseUrl}}"
									],
									"path": [
										"publications",
										"orders"
									]
								}
							},
							"response": []
						},
						{
							"name": "publications -  Company slug with companyId",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"\r",
											"pm.test(request.name, function () {\r",
											"    var responseJson = pm.response.json();\r",
											"    pm.expect(responseJson.orderDate).to.include(moment().format(\"YYYY-MM-DD\"));\r",
											"    pm.expect(responseJson.publications.length).to.eql(3);\r",
											"    pm.collectionVariables.set(\"newCompanyDeliveryId\", responseJson.publications[0].deliveryId);\r",
											"\r",
											"    checkPublication(pm, responseJson.publications[0], 0);\r",
											"    checkPublication(pm, responseJson.publications[1], 1);\r",
											"    checkPublication(pm, responseJson.publications[2], 2);\r",
											"\r",
											"});\r",
											"\r",
											"function checkPublication(pm, publication, index, startDate, endDate) {\r",
											"    pm.expect(publication.href).to.eql(\"/publications/\" + publication.deliveryId);\r",
											"    if (index == 1) {\r",
											"        pm.expect(publication.assessmentSlug).to.eql(\"debtor-risk-assessment\");\r",
											"        pm.expect(publication.currency).to.eql(undefined);\r",
											"    } else if (index == 0) {\r",
											"        pm.expect(publication.assessmentSlug).to.eql(\"debtor-risk-assessment-package\");\r",
											"        pm.expect(publication.currency).to.eql(undefined);\r",
											"    } else if (index == 2) {\r",
											"        pm.expect(publication.assessmentSlug).to.eql(\"credit-opinion\");\r",
											"       // pm.expect(publication.currency).to.eql(\"EUR\");\r",
											"    }\r",
											"    pm.expect(publication.status).to.eql(\"in-preparation\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "authorization",
										"value": "{{idToken}}",
										"type": "text"
									},
									{
										"key": "x-api-key",
										"value": "{{dataAPIApiKey}}",
										"type": "text"
									},
									{
										"key": "Accept-Language",
										"value": "EN",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"companyId\": \"{{companyId}}\",\r\n    \"assessments\": [\r\n        {\r\n            \"slug\": \"debtor-risk-assessment\"\r\n        },\r\n        {\r\n            \"slug\": \"debtor-risk-assessment-package\"\r\n        },\r\n        {\r\n            \"currency\" : \"EUR\",\r\n            \"slug\": \"credit-opinion\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{dataAPIBaseUrl}}/publications/orders",
									"host": [
										"{{dataAPIBaseUrl}}"
									],
									"path": [
										"publications",
										"orders"
									]
								}
							},
							"response": []
						},
						{
							"name": "publications -  Company slug with externalId",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.collectionVariables.set(\"startDate\", moment().add(7, 'd').format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"\r",
											"pm.test(request.name, function () {\r",
											"    var startDate = JSON.parse(request.data).startDate;\r",
											"    var endDate = moment(startDate).add(1, 'Y').format(\"YYYY-MM-DD\");\r",
											"\r",
											"    var responseJson = pm.response.json();\r",
											"    pm.expect(responseJson.orderDate).to.include(moment().format(\"YYYY-MM-DD\"));\r",
											"    pm.expect(responseJson.monitorings.length).to.eql(3);\r",
											"\r",
											"    checkMonitoring(pm, responseJson.monitorings[0], 0, startDate, endDate);\r",
											"    checkMonitoring(pm, responseJson.monitorings[1], 1, startDate, endDate);\r",
											"    checkMonitoring(pm, responseJson.monitorings[2], 2, startDate, endDate);\r",
											"\r",
											"    pm.collectionVariables.set(\"newMonitoringId\", responseJson.monitorings[0].id);\r",
											"});\r",
											"\r",
											"function checkMonitoring(pm, monitoring, index, startDate, endDate) {\r",
											"    pm.expect(monitoring.id).to.eql(monitoring.initialDeliveryId);\r",
											"    pm.expect(monitoring.companyId).to.eql(pm.collectionVariables.get(\"externalIdCompanyId\"));\r",
											"    pm.expect(monitoring.startDate).to.eql(startDate);\r",
											"    pm.expect(monitoring.endDate).to.eql(endDate);\r",
											"    pm.expect(monitoring.countryCode).to.eql(pm.collectionVariables.get(\"externalIdCountryCode\"));\r",
											"    pm.expect(monitoring.naceCode).to.eql(undefined);\r",
											"    if (index == 0) {\r",
											"        pm.expect(monitoring.assessmentSlug).to.eql(\"debtor-risk-assessment\");\r",
											"        pm.expect(monitoring.currency).to.eql(undefined);\r",
											"    } else if (index == 1) {\r",
											"        pm.expect(monitoring.assessmentSlug).to.eql(\"debtor-risk-assessment-package\");\r",
											"        pm.expect(monitoring.currency).to.eql(undefined);\r",
											"    } else if (index == 2) {\r",
											"        pm.expect(monitoring.assessmentSlug).to.eql(\"advanced-opinion\");\r",
											"       // pm.expect(monitoring.currency).to.eql(\"EUR\");\r",
											"    }\r",
											"    pm.expect(monitoring.status).to.eql(\"in-preparation\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "authorization",
										"value": "{{idToken}}",
										"type": "text"
									},
									{
										"key": "x-api-key",
										"value": "{{dataAPIApiKey}}",
										"type": "text"
									},
									{
										"key": "Accept-Language",
										"value": "EN",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"externalId\": \"{{externalId}}\",\r\n    \"countryCode\": \"{{externalIdCountryCode}}\",\r\n    \"startDate\" : \"{{startDate}}\",\r\n    \"assessments\": [\r\n        {\r\n            \"slug\": \"debtor-risk-assessment\"\r\n        },\r\n        {\r\n            \"slug\": \"debtor-risk-assessment-package\"\r\n        },\r\n        {\r\n            \"currency\" : \"EUR\",\r\n            \"slug\": \"advanced-opinion\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{dataAPIBaseUrl}}/publications/orders",
									"host": [
										"{{dataAPIBaseUrl}}"
									],
									"path": [
										"publications",
										"orders"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "GET",
					"item": [
						{
							"name": "publications - Finished publication FR",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.request.url += pm.collectionVariables.get(\"newDeliveryId\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(request.name, function () {\r",
											"    checkResponse(pm, 200, null, false);\r",
											"\r",
											"    var responseJson = pm.response.json();\r",
											"\r",
											"    var lastPublication = responseJson.filter(element => element.isCurrent);\r",
											"    pm.expect(lastPublication.length).to.eql(1);\r",
											"    pm.expect(lastPublication[0].assessmentSlug).to.eql(\"sector-risk-assessment\");\r",
											"    pm.expect(lastPublication[0].countryCode).to.eql(pm.collectionVariables.get(\"countryCode\"));\r",
											"    pm.expect(lastPublication[0].naceCode.code).to.eql(pm.collectionVariables.get(\"naceCode2\"));\r",
											"    pm.expect(lastPublication[0].descriptions[0].language).to.eql(\"fr\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "{{idToken}}",
										"type": "text"
									},
									{
										"key": "x-api-key",
										"value": "{{dataAPIApiKey}}",
										"type": "text"
									},
									{
										"key": "Accept-Language",
										"value": "FR",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{dataAPIBaseUrl}}/publications?deliveryId=2d5d37a3-231d-47a9-9904-735d029312ea",
									"host": [
										"{{dataAPIBaseUrl}}"
									],
									"path": [
										"publications"
									],
									"query": [
										{
											"key": "deliveryId",
											"value": "2d5d37a3-231d-47a9-9904-735d029312ea"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "publications - Finished publication EN",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.request.url += pm.collectionVariables.get(\"newDeliveryId\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(request.name, function () {\r",
											"    checkResponse(pm, 200, null, false);\r",
											"\r",
											"    var responseJson = pm.response.json();\r",
											"\r",
											"    var lastPublication = responseJson.filter(element => element.isCurrent);\r",
											"    pm.expect(lastPublication.length).to.eql(1);\r",
											"    pm.expect(lastPublication[0].assessmentSlug).to.eql(\"sector-risk-assessment\");\r",
											"    pm.expect(lastPublication[0].countryCode).to.eql(pm.collectionVariables.get(\"countryCode\"));\r",
											"    pm.expect(lastPublication[0].naceCode.code).to.eql(pm.collectionVariables.get(\"naceCode2\"));\r",
											"    pm.expect(lastPublication[0].descriptions[0].language).to.eql(\"en\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "{{idToken}}",
										"type": "text"
									},
									{
										"key": "x-api-key",
										"value": "{{dataAPIApiKey}}",
										"type": "text"
									},
									{
										"key": "Accept-Language",
										"value": "EN",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{dataAPIBaseUrl}}/publications?deliveryId=7f58e267-e6cc-4311-9dfb-56d8a621b582",
									"host": [
										"{{dataAPIBaseUrl}}"
									],
									"path": [
										"publications"
									],
									"query": [
										{
											"key": "deliveryId",
											"value": "7f58e267-e6cc-4311-9dfb-56d8a621b582"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "publications - Opened publication FR",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.request.url += pm.collectionVariables.get(\"newCompanyDeliveryId\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(request.name, function () {\r",
											"    checkResponse(pm, 202, null, false);\r",
											"\r",
											"    var responseJson = pm.response.json();\r",
											"    pm.expect(responseJson.messages[0].code).to.eql(\"order_not_finished\");\r",
											"    pm.expect(responseJson.messages[0].message).to.eql(\"Order is not yet finished\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "{{idToken}}",
										"type": "text"
									},
									{
										"key": "x-api-key",
										"value": "{{dataAPIApiKey}}",
										"type": "text"
									},
									{
										"key": "Accept-Language",
										"value": "FR",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{dataAPIBaseUrl}}/publications?deliveryId=",
									"host": [
										"{{dataAPIBaseUrl}}"
									],
									"path": [
										"publications"
									],
									"query": [
										{
											"key": "deliveryId",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "​health",
			"item": [
				{
					"name": "health-check - Nominal",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(request.name, function () {\r",
									"    checkResponse(pm, 200, null, false);\r",
									"\r",
									"    var responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.status).to.eql(\"OK\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "{{idToken}}",
								"type": "text"
							},
							{
								"key": "x-api-key",
								"value": "{{dataAPIApiKey}}",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "FR",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{dataAPIBaseUrl}}/health-check",
							"host": [
								"{{dataAPIBaseUrl}}"
							],
							"path": [
								"health-check"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "oauth2"
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Code n\"cessaire tant que la sandbox n'a pas été redéployée",
					"if (pm.environment.name.includes('Playground - Sandbox') && pm.request.url.path[0] != \"token\") {",
					"    var part = pm.request.url.path[0];",
					"    if (part == \"countries\") {",
					"        part = \"country\";",
					"    } else if (part == \"compagnies\") {",
					"        part = \"company\";",
					"    } else {",
					"        part = part.slice(0, -1);",
					"    }",
					"    pm.environment.set(\"dataAPIBaseUrl\", pm.environment.get(\"dataAPIBaseUrl\").replace(\"dataapi\", part));",
					"}",
					"",
					"pm.collectionVariables.set(\"countryCode\", \"FR\");",
					"pm.collectionVariables.set(\"naceCode1\", \"9000\");",
					"pm.collectionVariables.set(\"naceCode2\", \"9001\");",
					"pm.collectionVariables.set(\"companyId\", \"397fb600-414c-3a55-a41a-d66bb6cfb36c\");",
					"pm.collectionVariables.set(\"externalId\", \"statistic-number#810684000\");",
					"pm.collectionVariables.set(\"externalIdCountryCode\", \"PL\");",
					"pm.collectionVariables.set(\"externalIdCompanyId\", \"397fb600-414c-3a55-a41a-d66bb6cfb36c\");",
					"pm.collectionVariables.set(\"docUrl\", \"https://coface.com/documentation/codes/missing_param\");",
					"",
					"pm.collectionVariables.set(\"skipTest\", false);",
					"pm.collectionVariables.set(\"jiraList\", []);"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"Object.prototype.checkResponse = function(pm, code, attribut, empty) {",
					"    pm.response.to.have.status(code);",
					"    var responseJson = pm.response.json();",
					"    if (code == 200) {",
					"        if (empty) {",
					"            pm.expect(responseJson.length).to.eql(0);",
					"            pm.expect(responseJson).to.eql([]);",
					"",
					"        }",
					"    } else if (code == 400) {",
					"        pm.expect(responseJson.messages[0].code).to.eql(\"missing_or_invalid_param\");",
					"        pm.expect(responseJson.messages[0].docUrl).to.eql(pm.collectionVariables.get(\"docUrl\"));",
					"        if (empty) {",
					"            if (attribut == \"body\") {",
					"                pm.expect(responseJson.messages[0].message).to.include(\"Input error: The input body `class RequestBody\");",
					"            } else {",
					"                pm.expect(responseJson.messages[0].message).to.eql(\"Input error: missing required query parameter `\" + attribut + \"`\");",
					"            }",
					"        } else {",
					"            if (responseJson.messages[0].message != \"Missing or invalid parameter: \" + attribut && responseJson.messages[0].message != \"Missing parameter: \" + attribut && responseJson.messages[0].message != \"Invalid parameter: \" + attribut) {",
					"                pm.expect(responseJson.messages[0].message).to.eql(\"Missing or invalid parameter: \" + attribut);",
					"            }",
					"        }",
					"    }",
					"};",
					"",
					"Object.prototype.checkParamSize = function(pm, attribut, minSize, maxSize) {",
					"    pm.response.to.have.status(400);",
					"    var responseJson = pm.response.json();",
					"    pm.expect(responseJson.messages[0].code).to.eql(\"missing_or_invalid_param\");",
					"    pm.expect(responseJson.messages[0].message).to.include(\"Input does not match the expected structure: /\" + attribut);",
					"    ",
					"    var attributPart = attribut.match(/\\w+/g)",
					"    var data = JSON.parse(pm.request.body.raw);",
					"    for (var i = 0;i < attributPart.length; i++) {",
					"        data = data[attributPart[i]];",
					"    }",
					"    var size = data.length;",
					"    if (size > maxSize) {",
					"        pm.expect(responseJson.messages[0].message).to.include(\"is too long (length:\");",
					"        pm.expect(responseJson.messages[0].message).to.include(\"maximum allowed: \" + maxSize);",
					"    } else {",
					"        pm.expect(responseJson.messages[0].message).to.include(\"is too short (length:\");",
					"        pm.expect(responseJson.messages[0].message).to.include(\"required minimum: \" + minSize);",
					"    }",
					"};",
					"",
					"Object.prototype.checkPagination = function(pm, item, pageSize, nbResult, range) {",
					"    pm.test(request.name + \" - Accept-Range\", function () {",
					"        pm.expect(pm.response.headers.get('Accept-Range')).to.eql(item + \" \" + pageSize);",
					"    });",
					"",
					"    var responseJson = pm.response.json();",
					"    pm.test(request.name + \" - Content-Range\", function () {",
					"        var contentRange = pm.response.headers.get('Content-Range');",
					"",
					"        if (range) {",
					"            // contentRange = startIndex-nbElementToRecover/maxResult",
					"            var contentRangePart = contentRange.match(/\\d+/g)",
					"            if (contentRangePart[1] > pageSize) {",
					"                pm.response.to.have.status(400);",
					"                pm.expect(responseJson.messages[0].code).to.eql(\"missing_or_invalid_param\");",
					"                pm.expect(responseJson.messages[0].message).to.eql(\"Too many items requested. The max page size is ${maxPageSize}.\");",
					"            } else {",
					"                pm.expect(contentRange).to.include(range + \"/\" + nbResult);",
					"            }",
					"        } else {",
					"            if (responseJson.length < pageSize) {",
					"                pm.expect(contentRange).to.include(\"0-\" + responseJson.length);",
					"            } else {",
					"                pm.expect(contentRange).to.include(\"0-\" + pageSize);",
					"            }",
					"        }",
					"    });",
					"",
					"    pm.test(request.name + \" - Count\", function () {",
					"        var contentRange = pm.response.headers.get('Content-Range');",
					"        // contentRange = startIndex-nbMaxElement/maxResult",
					"        var contentRangePart = contentRange.match(/\\d+/g)",
					"        var pageSize = contentRangePart[1] > contentRangePart[2] ? contentRangePart[2] : contentRangePart[1];",
					"        if (contentRangePart[2] > contentRangePart[1]) {",
					"            checkResponse(pm, 206);",
					"        } else {",
					"            checkResponse(pm, 200);",
					"        }",
					"        pm.expect(responseJson.length).to.eql(parseInt(pageSize));",
					"    });",
					"};",
					"",
					"Object.prototype.mustControlResult = function(pm, ticket) {",
					"    if (pm.collectionVariables.get(\"skipTest\")) {",
					"        return !pm.collectionVariables.get(\"jiraList\").include(ticket);",
					"    }",
					"    return true;",
					"};"
				]
			}
		}
	],
	"variable": [
		{
			"key": "countryCode",
			"value": ""
		},
		{
			"key": "naceCode1",
			"value": ""
		},
		{
			"key": "naceCode2",
			"value": ""
		},
		{
			"key": "companyId",
			"value": ""
		},
		{
			"key": "externalId",
			"value": ""
		},
		{
			"key": "externalIdCountryCode",
			"value": ""
		},
		{
			"key": "externalIdCompanyId",
			"value": ""
		},
		{
			"key": "skipTest",
			"value": ""
		},
		{
			"key": "jiraList",
			"value": ""
		},
		{
			"key": "newDeliveryId",
			"value": ""
		},
		{
			"key": "docUrl",
			"value": ""
		}
	]
}